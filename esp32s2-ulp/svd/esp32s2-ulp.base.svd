<?xml version="1.0" encoding="UTF-8"?>
<device schemaVersion="1.1" xmlns:xs="http://www.w3.org/2001/XMLSchema-instance" xs:noNamespaceSchemaLocation="CMSIS-SVD_Schema_1_1.xsd">
  <vendor>ESPRESSIF SYSTEMS (SHANGHAI) CO., LTD.</vendor>
  <vendorID>ESPRESSIF</vendorID>
  <name>ESP32-S2-ULP</name>
  <series>RISC-V ULP</series>
  <version>2</version>
  <description>32-bit RISC-V MCU</description>
  <licenseText>Copyright 2025 Espressif Systems (Shanghai) PTE LTD

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.</licenseText>
  <cpu>
    <name>RV32IMC</name>
    <revision>r0p0</revision>
    <endian>little</endian>
    <mpuPresent>false</mpuPresent>
    <fpuPresent>false</fpuPresent>
    <nvicPrioBits>0</nvicPrioBits>
    <vendorSystickConfig>false</vendorSystickConfig>
  </cpu>
  <addressUnitBits>32</addressUnitBits>
  <width>32</width>
  <resetValue>0x00000000</resetValue>
  <resetMask>0xFFFFFFFF</resetMask>
  <peripherals>
    <peripheral>
      <name>RTC_IO</name>
      <description>Low-power Input/Output</description>
      <groupName>RTCIO</groupName>
      <baseAddress>0x0000A400</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0xF0</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>RTC_GPIO_OUT</name>
          <description>RTC GPIO output register</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_OUT_DATA</name>
              <description>GPIO0 ~ 21 output register. Bit10 corresponds to GPIO0, bit11 corresponds to GPIO1, etc.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_OUT_W1TS</name>
          <description>RTC GPIO output bit set register</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_OUT_DATA_W1TS</name>
              <description>GPIO0 ~ 21 output set register. If the value 1 is written to a bit here, the corresponding bit in RTCIO_RTC_GPIO_OUT_REG will be set to 1. Recommended operation: use this register to set RTCIO_RTC_GPIO_OUT_REG.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_OUT_W1TC</name>
          <description>RTC GPIO output bit clear register</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_OUT_DATA_W1TC</name>
              <description>GPIO0 ~ 21 output clear register. If the value 1 is written to a bit here, the corresponding bit in RTCIO_RTC_GPIO_OUT_REG will be cleared. Recommended operation: use this register to clear RTCIO_RTC_GPIO_OUT_REG.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_ENABLE</name>
          <description>RTC GPIO output enable register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REG_RTCIO_REG_GPIO_ENABLE</name>
              <description>GPIO0 ~ 21 output enable. Bit10 corresponds to GPIO0, bit11 corresponds to GPIO1, etc. If the bit is set to 1, it means this GPIO pad is output.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_ENABLE_W1TS</name>
          <description>RTC GPIO output enable bit set register</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REG_RTCIO_REG_GPIO_ENABLE_W1TS</name>
              <description>GPIO0 ~ 21 output enable set register. If the value 1 is written to a bit here, the corresponding bit in RTCIO_RTC_GPIO_ENABLE_REG will be set to 1. Recommended operation: use this register to set RTCIO_RTC_GPIO_ENABLE_REG.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_ENABLE_W1TC</name>
          <description>RTC GPIO output enable bit clear register</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REG_RTCIO_REG_GPIO_ENABLE_W1TC</name>
              <description>GPIO0 ~ 21 output enable clear register. If the value 1 is written to a bit here, the corresponding bit in RTCIO_RTC_GPIO_ENABLE_REG will be cleared. Recommended operation: use this register to clear RTCIO_RTC_GPIO_ENABLE_REG.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_STATUS</name>
          <description>RTC GPIO interrupt status register</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_STATUS_INT</name>
              <description>GPIO0 ~ 21 interrupt status register. Bit10 corresponds to GPIO0, bit11 corresponds to GPIO1, etc. This register should be used together with RTCIO_RTC_GPIO_PINn_INT_TYPE in RTCIO_RTC_GPIO_PINn_REG. 0: no interrupt; 1: corresponding interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_STATUS_W1TS</name>
          <description>RTC GPIO interrupt status bit set register</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_STATUS_INT_W1TS</name>
              <description>GPIO0 ~ 21 interrupt set register. If the value 1 is written to a bit here, the corresponding bit in RTCIO_GPIO_STATUS_INT will be set to 1. Recommended operation: use this register to set RTCIO_GPIO_STATUS_INT.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_STATUS_W1TC</name>
          <description>RTC GPIO interrupt status bit clear register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_STATUS_INT_W1TC</name>
              <description>GPIO0 ~ 21 interrupt clear register. If the value 1 is written to a bit here, the corresponding bit in RTCIO_GPIO_STATUS_INT will be cleared. Recommended operation: use this register to clear RTCIO_GPIO_STATUS_INT.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_GPIO_IN</name>
          <description>RTC GPIO input register</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_IN_NEXT</name>
              <description>GPIO0 ~ 21 input value. Bit10 corresponds to GPIO0, bit11 corresponds to GPIO1, etc. Each bit represents a pad input value, 1 for high level, and 0 for low level.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>22</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>RTC_GPIO_PIN%s</name>
          <description>RTC configuration for pin %s</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_PIN_PAD_DRIVER</name>
              <description>Pad driver selection. 0: normal output. 1: open drain.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_PIN_INT_TYPE</name>
              <description>GPIO interrupt type selection. 0: GPIO interrupt disabled. 1: rising edge trigger. 2: falling edge trigger. 3: any edge trigger. 4: low level trigger. 5: high level trigger.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GPIO_PIN_WAKEUP_ENABLE</name>
              <description>GPIO wake-up enable. This will only wake up ESP32-S2 from Light-sleep.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_DEBUG_SEL</name>
          <description>RTC debug select register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_DEBUG_SEL0</name>
              <bitOffset>0</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL1</name>
              <bitOffset>5</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL2</name>
              <bitOffset>10</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL3</name>
              <bitOffset>15</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_SEL4</name>
              <bitOffset>20</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DEBUG_12M_NO_GATING</name>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <dim>15</dim>
          <dimIncrement>0x4</dimIncrement>
          <name>TOUCH_PAD%s</name>
          <description>Touch pad %s configuration register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0x52000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>Output enable in sleep mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>Input enable in sleep mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>0: no sleep mode. 1: enable sleep mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>Function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>Connect the RTC pad input to digital pad input.  0 is available.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD</name>
              <description>Touch sensor power on.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIE_OPT</name>
              <description>The tie option of touch sensor. 0: tie low. 1: tie high.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>START</name>
              <description>Start touch sensor.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC</name>
              <description>Touch sensor slope control. 3-bit for each touch pad, defaults to 0x4.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_32P_PAD</name>
          <description>32KHz crystal P-pad configuration register</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>X32P_FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_SLP_OE</name>
              <description>output enable in sleep mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_SLP_IE</name>
              <description>input enable in sleep mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_SLP_SEL</name>
              <description>1: enable sleep mode. 0: no sleep mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_FUN_SEL</name>
              <description>Function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_MUX_SEL</name>
              <description>1: use RTC GPIO. 0: use digital GPIO.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL_32N_PAD</name>
          <description>32KHz crystal N-pad configuration register</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>X32N_FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_SLP_OE</name>
              <description>Output enable in sleep mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_SLP_IE</name>
              <description>Input enable in sleep mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_SLP_SEL</name>
              <description>1: enable sleep mode. 0: no sleep mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_FUN_SEL</name>
              <description>Function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_MUX_SEL</name>
              <description>1: use RTC GPIO. 0: use digital GPIO.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_DAC1</name>
          <description>DAC1 configuration register</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>PDAC1_DAC</name>
              <description>Configure DAC_1 output when RTCIO_PDAC1_DAC_XPD_FORCE is set to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_XPD_DAC</name>
              <description>When RTCIO_PDAC1_DAC_XPD_FORCE is set to 1, 1: enable DAC_1 output. 0: disable DAC_1 output.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_DAC_XPD_FORCE</name>
              <description>1: use RTCIO_PDAC1_XPD_DAC to control DAC_1 output. 0: use SAR ADC FSM to control DAC_1 output.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_SLP_OE</name>
              <description>Output enable in sleep mode</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_SLP_IE</name>
              <description>Input enable in sleep mode</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_SLP_SEL</name>
              <description>1: enable sleep mode. 0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_FUN_SEL</name>
              <description>DAC_1 function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_MUX_SEL</name>
              <description>1: use RTC GPIO. 0: use digital GPIO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_DAC2</name>
          <description>DAC2 configuration register</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <resetValue>0x40000000</resetValue>
          <fields>
            <field>
              <name>PDAC2_DAC</name>
              <description>Configure DAC_2 output when RTCIO_PDAC2_DAC_XPD_FORCE is set to 1.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_XPD_DAC</name>
              <description>When RTCIO_PDAC2_DAC_XPD_FORCE is set to 1, 1: enable DAC_2 output. 0: disable DAC_2 output.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_DAC_XPD_FORCE</name>
              <description>1: use RTCIO_PDAC2_XPD_DAC to control DAC_2 output. 0: use SAR ADC FSM to control DAC_2 output.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_SLP_OE</name>
              <description>Output enable in sleep mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_SLP_IE</name>
              <description>Input enable in sleep mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_SLP_SEL</name>
              <description>1: enable sleep mode. 0: no sleep mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_FUN_SEL</name>
              <description>DAC_2 function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_MUX_SEL</name>
              <description>1: use RTC GPIO. 0: use digital GPIO.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA: 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PAD19</name>
          <description>Touch pad 19 configuration register</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>Output enable in sleep mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>Input enable in sleep mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode. 0: no sleep mode</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>Function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO. 0: use digital GPIO.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PAD20</name>
          <description>Touch pad 20 configuration register</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>Output enable in sleep mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>Input enable in sleep mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode. 0: no sleep mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>Function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO. 0: use digital GPIO.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_PAD21</name>
          <description>Touch pad 21 configuration register</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>FUN_IE</name>
              <description>Input enable in normal execution.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_OE</name>
              <description>Output enable in sleep mode.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_IE</name>
              <description>Input enable in sleep mode.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_SEL</name>
              <description>1: enable sleep mode. 0: no sleep mode.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FUN_SEL</name>
              <description>Function selection.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MUX_SEL</name>
              <description>1: use RTC GPIO. 0: use digital GPIO.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RUE</name>
              <description>Pull-down enable of the pad. 1: internal pull-down enabled. 0: internal pull-down disabled.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RDE</name>
              <description>Pull-up enable of the pad. 1: internal pull-up enabled. 0: internal pull-up disabled.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRV</name>
              <description>Select the drive strength of the pad. 0: ~5 mA. 1: ~10 mA. 2: ~20 mA. 3: ~40 mA.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP0</name>
          <description>External wake up configuration register</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEL</name>
              <description>GPIO[0-17] can be used to wake up the chip when the chip is in the sleep mode. This register prompts the pad source to wake up the chip when the latter is indeep/light sleep mode. 
0: select GPIO0; 1: select GPIO2, etc</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTL_EXT_CTR</name>
          <description>Crystal power down enable GPIO source</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEL</name>
              <description>Select the external crystal power down enable source to get into sleep mode. 0: select GPIO0. 1: select GPIO1, etc. The input value on this pin XOR RTC_CNTL_EXT_XTL_CONF_REG[30] is the crystal power down enable signal.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_I2C_IO</name>
          <description>RTC I2C pad selection</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_DEBUG_BIT_SEL</name>
              <bitOffset>23</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SCL_SEL</name>
              <description>Selects a pad the RTC I2C SCL signal connects to. 0: use TOUCH PAD0. 1: use TOUCH PAD2.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_SDA_SEL</name>
              <description>Selects a pad the RTC I2C SDA signal connects to. 0: use TOUCH PAD1. 1: use TOUCH PAD3.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_IO_TOUCH_CTRL</name>
          <description>Touch control register</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IO_TOUCH_BUFSEL</name>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IO_TOUCH_BUFMODE</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RTC_IO_DATE</name>
          <description>Version control register</description>
          <addressOffset>0x1FC</addressOffset>
          <size>0x20</size>
          <resetValue>0x01903170</resetValue>
          <fields>
            <field>
              <name>IO_DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC_CNTL</name>
      <description>Real-Time Clock Control</description>
      <groupName>RTC_CNTL</groupName>
      <baseAddress>0x00008000</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x138</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>RISCV_START_INT</name>
        <value>6</value>
      </interrupt>
      <interrupt>
        <name>SW_INT</name>
        <value>7</value>
      </interrupt>
      <interrupt>
        <name>SWD_INT</name>
        <value>8</value>
      </interrupt>
      <registers>
        <register>
          <name>OPTIONS0</name>
          <description>Sets the power options of crystal and PLL clocks, and initiates reset by software</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x1C002000</resetValue>
          <fields>
            <field>
              <name>SW_STALL_APPCPU_C0</name>
              <description>{reg_sw_stall_appcpu_c1[5:0] , reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_STALL_PROCPU_C0</name>
              <description>When RTC_CNTL_REG_SW_STALL_PROCPU_C1 is configured to 0x21, setting this bit to 0x2 stalls the CPU by SW.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_APPCPU_RST</name>
              <description>APP CPU SW reset. (Note, we don’t have APP CPU for ESP32-S2)</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SW_PROCPU_RST</name>
              <description>Set this bit to reset the CPU by SW.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>BB_I2C_FORCE_PD</name>
              <description>Set this bit to FPD BB_I2C.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BB_I2C_FORCE_PU</name>
              <description>Set this bit to FPU BB_I2C.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_I2C_FORCE_PD</name>
              <description>Set this bit to FPD BB_PLL _I2C.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_I2C_FORCE_PU</name>
              <description>Set this bit to FPU BB_PLL _I2C.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_FORCE_PD</name>
              <description>Set this bit to FPD BB_PLL.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_FORCE_PU</name>
              <description>Set this bit to FPU BB_PLL.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_PD</name>
              <description>Set this bit to FPD the crystal oscillator.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_PU</name>
              <description>Set this bit to FPU the crystal oscillator.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_ISO</name>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FORCE_ISO</name>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_FORCE_ISO</name>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_FORCE_NOISO</name>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_FORCE_NOISO</name>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANALOG_FORCE_NOISO</name>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_RST</name>
              <description>Set this bit to force reset the digital system in deep-sleep.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_NORST</name>
              <description>Set this bit to disable force reset to digital system in deep-sleep.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_SYS_RST</name>
              <description>Set this bit to reset the system via SW.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_TIMER0</name>
          <description>RTC timer threshold register 0</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_VAL_LO</name>
              <description>Sets the lower 32 bits of the trigger threshold for the RTC timer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_TIMER1</name>
          <description>RTC timer threshold register 1</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_VAL_HI</name>
              <description>Sets the higher 16 bits of the trigger threshold for the RTC timer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_MAIN_TIMER_ALARM_EN</name>
              <description>Sets this bit to enable the timer alarm.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_UPDATE</name>
          <description>RTC timer update control register</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TIMER_SYS_STALL</name>
              <description>Selects the triggering condition for the RTC timer. See details in Table 1-2.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_XTL_OFF</name>
              <description>Selects the triggering condition for the RTC timer. See details in Table 1-2.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIMER_SYS_RST</name>
              <description>Selects the triggering condition for the RTC timer. See details in Table 1-2.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_TIME_UPDATE</name>
              <description>Selects the triggering condition for the RTC timer. See details in Table 1-2.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_LOW0</name>
          <description>Stores the lower 32 bits of RTC timer 0.</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_TIMER_VALUE0_LOW</name>
              <description>Stores the lower 32 bits of RTC timer 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_HIGH0</name>
          <description>Stores the higher 16 bits of RTC timer 0</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_TIMER_VALUE0_HIGH</name>
              <description>Stores the higher 16 bits of RTC timer 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATE0</name>
          <description>Configures the sleep / reject / wakeup state</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SW_CPU_INT</name>
              <description>Sends a SW RTC interrupt to CPU.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_SLP_REJECT_CAUSE_CLR</name>
              <description>Clears the RTC reject-to-sleep cause.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>APB2RTC_BRIDGE_SEL</name>
              <description>1: APB to RTC using bridge    0: APB to RTC using sync</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_ACTIVE_IND</name>
              <description>Indicates the SDIO is active.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_WAKEUP</name>
              <description>Sleep wakeup bit.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_REJECT</name>
              <description>Sleep reject bit.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLEEP_EN</name>
              <description>Sends the chip to sleep.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER1</name>
          <description>Configures CPU stall options</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x28140403</resetValue>
          <fields>
            <field>
              <name>CPU_STALL_EN</name>
              <description>Enables CPU stalling.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CPU_STALL_WAIT</name>
              <description>Sets the CPU stall waiting cycle (using the RTC fast clock).</description>
              <bitOffset>1</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_WAIT</name>
              <description>Sets the 8 MHz clock  waiting (using the RTC slow clock).</description>
              <bitOffset>6</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_BUF_WAIT</name>
              <description>Sets the XTAL waiting cycle (using the RTC slow clock).</description>
              <bitOffset>14</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_BUF_WAIT</name>
              <description>Sets the PLL waiting cycle (using the RTC slow clock).</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER2</name>
          <description>Configures RTC slow clock and touch controller</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x01080000</resetValue>
          <fields>
            <field>
              <name>ULPCP_TOUCH_START_WAIT</name>
              <description>Sets the waiting cycle (using the RTC slow clock) before the ULP co-processor / touch controller start to work.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MIN_TIME_CK8M_OFF</name>
              <description>Sets the minimal cycle for  8 MHz clock (using the RTC slow clock) when powered down.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER3</name>
          <description>configure some wait time for power on</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x14160A08</resetValue>
          <fields>
            <field>
              <name>WIFI_WAIT_TIMER</name>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_POWERUP_TIMER</name>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM_RAM_WAIT_TIMER</name>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM_RAM_POWERUP_TIMER</name>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER4</name>
          <description>configure some wait time for power on</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <resetValue>0x10200A08</resetValue>
          <fields>
            <field>
              <name>RTC_WAIT_TIMER</name>
              <bitOffset>0</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_POWERUP_TIMER</name>
              <bitOffset>9</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_WAIT_TIMER</name>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_POWERUP_TIMER</name>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER5</name>
          <description>Configures the minimal sleep cycles</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x12148000</resetValue>
          <fields>
            <field>
              <name>MIN_SLP_VAL</name>
              <description>Sets the minimal sleep cycles (using the RTC slow clock).</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCMEM_WAIT_TIMER</name>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTCMEM_POWERUP_TIMER</name>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIMER6</name>
          <description>Configure minimal sleep cycles register</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <resetValue>0x10200000</resetValue>
          <fields>
            <field>
              <name>DG_DCDC_WAIT_TIMER</name>
              <bitOffset>16</bitOffset>
              <bitWidth>9</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_DCDC_POWERUP_TIMER</name>
              <bitOffset>25</bitOffset>
              <bitWidth>7</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ANA_CONF</name>
          <description>Configures the power options for I2C and PLLA</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <resetValue>0x00A40000</resetValue>
          <fields>
            <field>
              <name>I2C_RESET_POR_FORCE_PD</name>
              <description>SLEEP_I2CPOR force pd</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_RESET_POR_FORCE_PU</name>
              <description>SLEEP_I2CPOR force pu</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>GLITCH_RST_EN</name>
              <description>Set this bit to enable a reset when the system detects a glitch.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_FORCE_PD</name>
              <description>Sets this bit to FPD the SAR_I2C.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_FORCE_PU</name>
              <description>Sets this bit to FPU the SAR_I2C.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLLA_FORCE_PD</name>
              <description>Sets this bit to FPD the PLLA.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLLA_FORCE_PU</name>
              <description>Sets this bit to FPU the PLLA.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BBPLL_CAL_SLP_START</name>
              <description>start BBPLL calibration during sleep</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PVTMON_PU</name>
              <description>1: PVTMON power up    ,  otherwise power down</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TXRF_I2C_PU</name>
              <description>1: TXRF_I2C power up    ,    otherwise power down</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RFRX_PBUS_PU</name>
              <description>1: RFRX_PBUS power up   ,   otherwise power down</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CKGEN_I2C_PU</name>
              <description>1: CKGEN_I2C power up   , otherwise power down</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PLL_I2C_PU</name>
              <description>1. PLL_I2C power up ,otherwise power down</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>RESET_STATE</name>
          <description>Indicates the CPU reset source. For more information about the reset cause, please refer to Table \ref{table:resetreasons} in Chapter \ref{module:ResetandClock} \textit{\nameref{module:ResetandClock}}.</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00003000</resetValue>
          <fields>
            <field>
              <name>RESET_CAUSE_PROCPU</name>
              <description>Stores the CPU reset cause.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RESET_CAUSE_APPCPU</name>
              <description>reset cause of APP CPU</description>
              <bitOffset>6</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>APPCPU_STAT_VECTOR_SEL</name>
              <description>APP CPU state vector sel</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PROCPU_STAT_VECTOR_SEL</name>
              <description>Selects the CPU state vector.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WAKEUP_STATE</name>
          <description>Wakeup bitmap enabling register</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00060000</resetValue>
          <fields>
            <field>
              <name>RTC_WAKEUP_ENA</name>
              <description>Enables the wakeup bitmap.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA_RTC</name>
          <description>RTC interrupt enabling register</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ENA</name>
              <description>Enables interruption when the chip wakes up from sleep.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ENA</name>
              <description>Enables interruption when the chip rejects to go to sleep.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_ENA</name>
              <description>Enables interruption when the SDIO idles.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_WDT_INT_ENA</name>
              <description>Enables the RTC watchdog interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_TOUCH_SCAN_DONE_INT_ENA</name>
              <description>Enables interruption upon the completion of a touch scanning.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_ULP_CP_INT_ENA</name>
              <description>Enables the ULP co-processor interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_TOUCH_DONE_INT_ENA</name>
              <description>Enables interruption upon the completion of a single touch.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_TOUCH_ACTIVE_INT_ENA</name>
              <description>Enables interruption when a touch is detected.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_TOUCH_INACTIVE_INT_ENA</name>
              <description>Enables interruption when a touch is released.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_BROWN_OUT_INT_ENA</name>
              <description>Enables the brown out interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_MAIN_TIMER_INT_ENA</name>
              <description>Enables the RTC main timer interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SARADC1_INT_ENA</name>
              <description>Enables the SAR ADC 1 interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_TSENS_INT_ENA</name>
              <description>Enables the touch sensor interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_COCPU_INT_ENA</name>
              <description>Enables the ULP-RISCV interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SARADC2_INT_ENA</name>
              <description>Enables the SAR ADC 2 interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SWD_INT_ENA</name>
              <description>Enables the super watchdog interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_XTAL32K_DEAD_INT_ENA</name>
              <description>Enables interruption when the 32 kHz crystal is dead.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_COCPU_TRAP_INT_ENA</name>
              <description>Enables interruption when the ULP-RISCV is trapped.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_TOUCH_TIMEOUT_INT_ENA</name>
              <description>Enables interruption when touch sensor times out.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_GLITCH_DET_INT_ENA</name>
              <description>Enables interruption when a glitch is detected.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW_RTC</name>
          <description>RTC interrupt raw register</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_RAW</name>
              <description>Stores the raw interrupt triggered when the chip wakes up from sleep.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_RAW</name>
              <description>Stores the raw interrupt triggered when the chip rejects to go to sleep.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_RAW</name>
              <description>Stores the raw interrupt triggered when the SDIO idles.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_WDT_INT_RAW</name>
              <description>Stores the raw RTC watchdog interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_SCAN_DONE_INT_RAW</name>
              <description>Stores the raw interrupt triggered upon the completion of a touch scanning.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_ULP_CP_INT_RAW</name>
              <description>Stores the raw ULP co-processor interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_DONE_INT_RAW</name>
              <description>Stores the raw interrupt triggered upon the completion of a single touch.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_ACTIVE_INT_RAW</name>
              <description>Stores the raw interrupt triggered when a touch is detected.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_INACTIVE_INT_RAW</name>
              <description>Stores the raw interrupt triggered when a touch is released.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_BROWN_OUT_INT_RAW</name>
              <description>Stores the raw brown out interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_TIMER_INT_RAW</name>
              <description>Stores the raw RTC main timer interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_SARADC1_INT_RAW</name>
              <description>Stores the raw SAR ADC 1 interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TSENS_INT_RAW</name>
              <description>Stores the raw touch sensor interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_INT_RAW</name>
              <description>Stores the raw ULP-RISCV interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_SARADC2_INT_RAW</name>
              <description>Stores the raw SAR ADC 2 interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_SWD_INT_RAW</name>
              <description>Stores the raw super watchdog interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_XTAL32K_DEAD_INT_RAW</name>
              <description>Stores the raw interrupt triggered when the 32 kHz crystal is dead.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_TRAP_INT_RAW</name>
              <description>Stores the raw interrupt triggered when the ULP-RISCV is trapped.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_TIMEOUT_INT_RAW</name>
              <description>Stores the raw interrupt triggered when touch sensor times out.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_GLITCH_DET_INT_RAW</name>
              <description>Stores the raw interrupt triggered when a glitch is detected.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST_RTC</name>
          <description>RTC interrupt state register</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_ST</name>
              <description>Stores the status of the interrupt triggered when the chip wakes up from sleep.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_ST</name>
              <description>Stores the status of the interrupt triggered when the chip rejects to go to sleep.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_ST</name>
              <description>Stores the status of the interrupt triggered when the SDIO idles.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_WDT_INT_ST</name>
              <description>Stores the status of the RTC watchdog interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_SCAN_DONE_INT_ST</name>
              <description>Stores the status of the interrupt triggered upon the completion of a touch scanning.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_ULP_CP_INT_ST</name>
              <description>Stores the status of the ULP co-processor interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_DONE_INT_ST</name>
              <description>Stores the status of the interrupt triggered upon the completion of a single touch.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_ACTIVE_INT_ST</name>
              <description>Stores the status of the interrupt triggered when a touch is detected.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_INACTIVE_INT_ST</name>
              <description>Stores the status of the interrupt triggered when a touch is released.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_BROWN_OUT_INT_ST</name>
              <description>Stores the status of the brown out interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_TIMER_INT_ST</name>
              <description>Stores the status of the RTC main timer interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_SARADC1_INT_ST</name>
              <description>Stores the status of the SAR ADC 1 interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TSENS_INT_ST</name>
              <description>Stores the status of the touch sensor interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_INT_ST</name>
              <description>Stores the status of the ULP-RISCV interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_SARADC2_INT_ST</name>
              <description>Stores the status of the SAR ADC 2 interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_SWD_INT_ST</name>
              <description>Stores the status of the super watchdog interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_XTAL32K_DEAD_INT_ST</name>
              <description>Stores the status of the interrupt triggered when the 32 kHz crystal is dead.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_TRAP_INT_ST</name>
              <description>Stores the status of the interrupt triggered when the ULP-RISCV is trapped.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_TIMEOUT_INT_ST</name>
              <description>Stores the status of the interrupt triggered when touch sensor times out.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_GLITCH_DET_INT_ST</name>
              <description>Stores the status of the interrupt triggered when a glitch is detected.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR_RTC</name>
          <description>RTC interrupt clear register</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLP_WAKEUP_INT_CLR</name>
              <description>Clears the interrupt triggered when the chip wakes up from sleep.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SLP_REJECT_INT_CLR</name>
              <description>Clears the interrupt triggered when the chip rejects to go to sleep.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SDIO_IDLE_INT_CLR</name>
              <description>Clears the interrupt triggered when the SDIO idles.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_WDT_INT_CLR</name>
              <description>Enables the RTC watchdog interrupt.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_SCAN_DONE_INT_CLR</name>
              <description>Clears the interrupt triggered upon the completion of a touch scanning.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_ULP_CP_INT_CLR</name>
              <description>Enables the ULP co-processor interrupt.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_DONE_INT_CLR</name>
              <description>Clears the interrupt triggered upon the completion of a single touch.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_ACTIVE_INT_CLR</name>
              <description>Clears the interrupt triggered when a touch is detected.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_INACTIVE_INT_CLR</name>
              <description>Clears the interrupt triggered when a touch is released.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_BROWN_OUT_INT_CLR</name>
              <description>Clears the brown out interrupt.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_MAIN_TIMER_INT_CLR</name>
              <description>Clears the RTC main timer interrupt.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_SARADC1_INT_CLR</name>
              <description>Clears the SAR ADC 1 interrupt.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_TSENS_INT_CLR</name>
              <description>Clears the touch sensor interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_COCPU_INT_CLR</name>
              <description>Clears the ULP-RISCV interrupt.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_SARADC2_INT_CLR</name>
              <description>Clears the SAR ADC 2 interrupt.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_SWD_INT_CLR</name>
              <description>Clears the super watchdog interrupt.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_XTAL32K_DEAD_INT_CLR</name>
              <description>Clears the interrupt triggered when the 32 kHz crystal is dead.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_COCPU_TRAP_INT_CLR</name>
              <description>Clears the interrupt triggered when the ULP-RISCV is trapped.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_TIMEOUT_INT_CLR</name>
              <description>Clears the interrupt triggered when touch sensor times out.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RTC_GLITCH_DET_INT_CLR</name>
              <description>Clears the interrupt triggered when a glitch is detected.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE0</name>
          <description>Reservation register 0</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH0</name>
              <description>Reservation register 0</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE1</name>
          <description>Reservation register 1</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH1</name>
              <description>Reservation register 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE2</name>
          <description>Reservation register 2</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH2</name>
              <description>Reservation register 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE3</name>
          <description>Reservation register 3</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH3</name>
              <description>Reservation register 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_XTL_CONF</name>
          <description>32 kHz crystal oscillator configuration register</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00066C80</resetValue>
          <fields>
            <field>
              <name>XTAL32K_WDT_EN</name>
              <description>Set this bit to enable the 32 kHz crystal watchdog.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_CLK_FO</name>
              <description>Set this bit to FPU the 32 kHz crystal watchdog clock.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_RESET</name>
              <description>Set this bit to reset the 32 kHz crystal watchdog by SW.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_EXT_CLK_FO</name>
              <description>Set this bit to FPU the external clock of 32 kHz crystal.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_BACKUP</name>
              <description>Set this bit to switch to the backup clock when the 32 kHz crystal is dead.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_RESTART</name>
              <description>Set this bit to restart the 32 kHz crystal automatically when the 32 kHz crystal is dead.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_AUTO_RETURN</name>
              <description>Set this bit to switch back to 32 kHz crystal when the 32 kHz crystal is restarted.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_XPD_FORCE</name>
              <description>Set 1 to allow the software to FPD the 32 kHz crystal.  Set 0 to allow the FSM to FPD the 32 kHz crystal. (R/W)</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENCKINIT_XTAL_32K</name>
              <description>Applies an internal clock to help the 32 kHz crystal to start.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBUF_XTAL_32K</name>
              <description>0: single-end buffer 1: differential buffer</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DGM_XTAL_32K</name>
              <description>xtal_32k gm control</description>
              <bitOffset>10</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DRES_XTAL_32K</name>
              <description>DRES_XTAL_32K</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_XTAL_32K</name>
              <description>XPD_XTAL_32K</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_XTAL_32K</name>
              <description>DAC_XTAL_32K</description>
              <bitOffset>17</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_WDT_STATE</name>
              <description>Stores the status of the 32 kHz watchdog.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_XTAL32K_GPIO_SEL</name>
              <description>Selects the 32 kHz crystal clock. 0: selects the external 32 kHz clock.  1: selects clock from the RTC GPIO X32P_C.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EXT_CTR_LV</name>
              <description>0: powers down XTAL at high level  1: powers down XTAL at low level</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTL_EXT_CTR_EN</name>
              <description>Enables the GPIO to power down the crystal oscillator.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP_CONF</name>
          <description>GPIO wakeup configuration register</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>GPIO_WAKEUP_FILTER</name>
              <description>Set this bit to enable the GPIO wakeup event filter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_WAKEUP0_LV</name>
              <description>0: external wakeup 0 at low level     1: external wakeup 0 at high level</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>EXT_WAKEUP1_LV</name>
              <description>0: external wakeup 1 at low level     1: external wakeup 1 at high level</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_REJECT_CONF</name>
          <description>Configures sleep / reject options</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SLEEP_REJECT_ENA</name>
              <description>Set this bit to enable reject-to-sleep.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LIGHT_SLP_REJECT_EN</name>
              <description>Set this bit to enable reject-to-light-sleep.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEEP_SLP_REJECT_EN</name>
              <description>Set this bit to enable reject-to-deep-sleep.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CPU_PERIOD_CONF</name>
          <description>CPU sel option</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_CPUSEL_CONF</name>
              <description>CPU sel option</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_CPUPERIOD_SEL</name>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_ACT_CONF</name>
          <description>configure sdio active register</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDIO_ACT_DNUM</name>
              <description>configure sdio act dnum</description>
              <bitOffset>22</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CLK_CONF</name>
          <description>RTC clock configuration register</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <resetValue>0x01583218</resetValue>
          <fields>
            <field>
              <name>CK8M_DIV_SEL_VLD</name>
              <description>Synchronizes the reg_ck8m_div_sel. Not that you have to invalidate the bus before switching clock, and validate the new clock.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV</name>
              <description>Set the CK8M_D256_OUT divider. 00: divided by 128   01: divided by 256   10: divided by 512  11: divided by 1024.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_CK8M</name>
              <description>Set this bit to disable CK8M and CK8M_D256_OUT.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_CK8M_DIV</name>
              <description>Selects the CK8M_D256_OUT. 1: CK8M 0: CK8M divided by 256.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_XTAL32K_EN</name>
              <description>Set this bit to enable CK_XTAL_32K clock for the digital core.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_CLK8M_D256_EN</name>
              <description>Set this bit to enable CK8M_D256_OUT clock for the digital core.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_CLK8M_EN</name>
              <description>Set this bit to enable 8 MHz clock for the digital core.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DIV_SEL</name>
              <description>Stores the 8 MHz divider, which is reg_ck8m_div_sel + 1</description>
              <bitOffset>12</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL_FORCE_NOGATING</name>
              <description>Set this bit to force no gating to crystal during sleep</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_NOGATING</name>
              <description>Set this bit to disable force gating to 8 MHz crystal during sleep.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_DFREQ</name>
              <description>CK8M_DFREQ</description>
              <bitOffset>17</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_PD</name>
              <description>Set this bit to FPD the 8 MHz clock.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CK8M_FORCE_PU</name>
              <description>Set this bit to FPU the 8 MHz clock.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FAST_CLK_RTC_SEL</name>
              <description>Set this bit to select the RTC fast clock. 0: XTAL div 4, 1: CK8M.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ANA_CLK_RTC_SEL</name>
              <description>Set this bit to select the RTC slow clock. 0: 90K rtc_clk  1: 32k XTAL  2: 8md256.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLOW_CLK_CONF</name>
          <description>RTC slow clock configuration register</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <resetValue>0x00400000</resetValue>
          <fields>
            <field>
              <name>RTC_ANA_CLK_DIV_VLD</name>
              <description>Synchronizes the reg_rtc_ana_clk_div bus. Note that you have to invalidate the bus before switching clock, and validate the new clock.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_ANA_CLK_DIV</name>
              <description>Set the rtc_clk divider.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOW_CLK_NEXT_EDGE</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDIO_CONF</name>
          <description>configure vddsdio register</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <resetValue>0x02B0BE0A</resetValue>
          <fields>
            <field>
              <name>SDIO_TIMER_TARGET</name>
              <description>timer count to apply reg_sdio_dcap after sdio power on</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DTHDRV</name>
              <description>Tieh = 1 mode drive ability. Initially set to 0 to limit charge current  set to 3 after several us.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DCAP</name>
              <description>ability to prevent LDO from overshoot</description>
              <bitOffset>11</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_INITI</name>
              <description>add resistor from ldo output to ground. 0: no res  1: 6k  2: 4k   3: 2k</description>
              <bitOffset>13</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_EN_INITI</name>
              <description>0 to set init[1:0]=0</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_DCURLIM</name>
              <description>tune current limit threshold when tieh = 0. About 800mA/(8+d)</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_MODECURLIM</name>
              <description>select current limit mode</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_ENCURLIM</name>
              <description>enable current limit</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_REG_PD_EN</name>
              <description>power down SDIO_REG in sleep. Only active when reg_sdio_force = 0</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_FORCE</name>
              <description>1: use SW option to control SDIO_REG   0: use state machine</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SDIO_TIEH</name>
              <description>SW option for SDIO_TIEH. Only active when reg_sdio_force = 1</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>REG1P8_READY</name>
              <description>read only register for REG1P8_READY</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DREFL_SDIO</name>
              <description>SW option for DREFL_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>25</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DREFM_SDIO</name>
              <description>SW option for DREFM_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DREFH_SDIO</name>
              <description>SW option for DREFH_SDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SDIO</name>
              <description>SW option for XPD_VOOSDIO. Only active when reg_sdio_force = 1</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BIAS_CONF</name>
          <description>configure power register</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010800</resetValue>
          <fields>
            <field>
              <name>BIAS_BUF_IDLE</name>
              <description>open bias buf when system in active</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_WAKE</name>
              <description>open bias buf when rtc in wakeup</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_DEEP_SLP</name>
              <description>open bias buf when rtc in deep sleep</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_BUF_MONITOR</name>
              <description>open bias buf when rtc in monitor state</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_CUR_DEEP_SLP</name>
              <description>xpd cur when rtc in sleep_state</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_CUR_MONITOR</name>
              <description>xpd cur when rtc in monitor state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_SLEEP_DEEP_SLP</name>
              <description>bias_sleep when rtc in sleep_state</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>BIAS_SLEEP_MONITOR</name>
              <description>bias_sleep when rtc in monitor state</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_ATTEN_DEEP_SLP</name>
              <description>DBG_ATTEN when rtc in sleep state</description>
              <bitOffset>18</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DBG_ATTEN_MONITOR</name>
              <description>DBG_ATTEN when rtc in monitor state</description>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ENB_SCK_XTAL</name>
              <description>ENB_SCK_XTAL</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INC_HEARTBEAT_REFRESH</name>
              <description>INC_HEARTBEAT_REFRESH</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEC_HEARTBEAT_PERIOD</name>
              <description>DEC_HEARTBEAT_PERIOD</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INC_HEARTBEAT_PERIOD</name>
              <description>INC_HEARTBEAT_PERIOD</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEC_HEARTBEAT_WIDTH</name>
              <description>DEC_HEARTBEAT_WIDTH</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_BIAS_I2C</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>REG</name>
          <description>RTC/DIG regulator configuration register</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <resetValue>0xA9002400</resetValue>
          <fields>
            <field>
              <name>DIG_REG_DBIAS_SLP</name>
              <description>Configures the regulation factor for the digital system voltage regulator when the CPU is in sleep status.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DIG_REG_DBIAS_WAK</name>
              <description>Configures the regulation factor for the digital system voltage regulator when the CPU is in active status.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCK_DCAP</name>
              <description>Configures the frequency of the RTC clocks.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DBIAS_SLP</name>
              <description>Configures the regulation factor for the low-power voltage regulator when the CPU is in sleep status.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DBIAS_WAK</name>
              <description>Configures the regulation factor for the low-power voltage regulator when the CPU is in active status.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DBOOST_FORCE_PD</name>
              <description>RTC_DBOOST force power down</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_DBOOST_FORCE_PU</name>
              <description>RTC_DBOOST force power up</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_REGULATOR_FORCE_PD</name>
              <description>Set this bit to FPD the RTC_REG, which means decreasing its voltage to 0.8 V or lower.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_REGULATOR_FORCE_PU</name>
              <description>Set this bit to FPU the RTC_REG.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PWC</name>
          <description>RTC power configuraiton register</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <resetValue>0x00012925</resetValue>
          <fields>
            <field>
              <name>RTC_FASTMEM_FORCE_NOISO</name>
              <description>Set this bit to disable the force isolation to the RTC fast memory.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FASTMEM_FORCE_ISO</name>
              <description>Set this bit to force isolate the RTC fast memory.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_FORCE_NOISO</name>
              <description>Set this bit to disable the force isolation to the RTC slow memory.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_FORCE_ISO</name>
              <description>Set this bit to force isolate the RTC slow memory.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FORCE_ISO</name>
              <description>Set this bit to force isolate the RTC peripherals.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FORCE_NOISO</name>
              <description>Set this bit to disable the force isolation to the RTC peripherals.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FASTMEM_FOLW_CPU</name>
              <description>Set 1 to FPD the RTC fast memory when the CPU is powered down.  Set 0 to FPD the RTC fast memory when the RTC main state machine is powered down.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FASTMEM_FORCE_LPD</name>
              <description>Set this bit to force not retain the RTC fast memory.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FASTMEM_FORCE_LPU</name>
              <description>Set this bit to force retain the RTC fast memory.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_FOLW_CPU</name>
              <description>Set 1 to FPD the RTC slow memory when the CPU is powered down.  Set 0 to FPD the RTC slow memory when the RTC main state machine is powered down.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_FORCE_LPD</name>
              <description>Set this bit to force not retain the RTC slow memory.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_FORCE_LPU</name>
              <description>Set this bit to force retain the RTC slow memory.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FASTMEM_FORCE_PD</name>
              <description>Set this bit to FPD the RTC fast memory.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FASTMEM_FORCE_PU</name>
              <description>Set this bit to FPU the RTC fast memory.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FASTMEM_PD_EN</name>
              <description>Set this bit to enable PD for the RTC fast memory in sleep.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_FORCE_PD</name>
              <description>Set this bit to FPD the RTC slow memory.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_FORCE_PU</name>
              <description>Set this bit to FPU the RTC slow memory.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SLOWMEM_PD_EN</name>
              <description>Set this bit to enable PD for the RTC slow memory in sleep.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FORCE_PD</name>
              <description>Set this bit to FPD the RTC peripherals.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_FORCE_PU</name>
              <description>Set this bit to FPU the RTC peripherals.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_PD_EN</name>
              <description>Set this bit to enable PD for the RTC peripherals in sleep.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_PAD_FORCE_HOLD</name>
              <description>Set this bit the force hold the RTC GPIOs.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIG_PWC</name>
          <description>Digital system power configuraiton register</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00555550</resetValue>
          <fields>
            <field>
              <name>LSLP_MEM_FORCE_PD</name>
              <description>Set this bit to FPD the memories in the digital system in sleep.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>LSLP_MEM_FORCE_PU</name>
              <description>Set this bit to FPU the memories in the digital system.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM0_FORCE_PD</name>
              <description>ROM force power down</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM0_FORCE_PU</name>
              <description>ROM force power up</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM0_FORCE_PD</name>
              <description>internal SRAM 0 force power down</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM0_FORCE_PU</name>
              <description>internal SRAM 0 force power up</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM1_FORCE_PD</name>
              <description>internal SRAM 1 force power down</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM1_FORCE_PU</name>
              <description>internal SRAM 1 force power up</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM2_FORCE_PD</name>
              <description>internal SRAM 2 force power down</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM2_FORCE_PU</name>
              <description>internal SRAM 2 force power up</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM3_FORCE_PD</name>
              <description>internal SRAM 3 force power down</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM3_FORCE_PU</name>
              <description>internal SRAM 3 force power up</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM4_FORCE_PD</name>
              <description>internal SRAM 4 force power down</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM4_FORCE_PU</name>
              <description>internal SRAM 4 force power up</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_PD</name>
              <description>Set this bit to FPD the Wi-Fi circuit.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_PU</name>
              <description>Set this bit to FPU the Wi-Fi circuit.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_PD</name>
              <description>Set this bit to FPD the digital system.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_PU</name>
              <description>Set this bit to FPD the DC-DC convertor in the digital system.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_DCDC_FORCE_PD</name>
              <description>Set this bit to FPD the DC-DC convertor in the digital system.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_DCDC_FORCE_PU</name>
              <description>Set this bit to FPU the DC-DC convertor in the digital system.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_DCDC_PD_EN</name>
              <description>Set this bit to enable PD for the DC-DC convertor in the digital system.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM0_PD_EN</name>
              <description>enable power down ROM in sleep</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM0_PD_EN</name>
              <description>enable power down internal SRAM 0 in sleep</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM1_PD_EN</name>
              <description>enable power down internal SRAM 1 in sleep</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM2_PD_EN</name>
              <description>enable power down internal SRAM 2 in sleep</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM3_PD_EN</name>
              <description>enable power down internal SRAM 3 in sleep</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM4_PD_EN</name>
              <description>enable power down internal SRAM 4 in sleep</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_PD_EN</name>
              <description>Set this bit to enable PD for the Wi-Fi circuit in sleep.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_PD_EN</name>
              <description>Set this bit to enable PD for the digital system in sleep.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIG_ISO</name>
          <description>Digital system ISO configuration register</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <resetValue>0xAAAA5000</resetValue>
          <fields>
            <field>
              <name>FORCE_OFF</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_ON</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_AUTOHOLD</name>
              <description>Indicates the auto-hold status of the digital GPIOs.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>CLR_DG_PAD_AUTOHOLD</name>
              <description>Se this bit to clear the auto-hold enabler for the digital GPIOs.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DG_PAD_AUTOHOLD_EN</name>
              <description>Se this bit to allow the digital GPIOs to enter the autohold status.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_NOISO</name>
              <description>Set this bit to disable the force isolation to the digital GPIOs.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_ISO</name>
              <description>Set this bit to force isolate the digital GPIOs.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_UNHOLD</name>
              <description>Set this bit the force unhold the digital GPIOs.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_PAD_FORCE_HOLD</name>
              <description>Set this bit the force hold the digital GPIOs.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM0_FORCE_ISO</name>
              <description>ROM force ISO</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ROM0_FORCE_NOISO</name>
              <description>ROM force no ISO</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM0_FORCE_ISO</name>
              <description>internal SRAM 0 force ISO</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM0_FORCE_NOISO</name>
              <description>internal SRAM 0 force no ISO</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM1_FORCE_ISO</name>
              <description>internal SRAM 1 force ISO</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM1_FORCE_NOISO</name>
              <description>internal SRAM 1 force no ISO</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM2_FORCE_ISO</name>
              <description>internal SRAM 2 force ISO</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM2_FORCE_NOISO</name>
              <description>internal SRAM 2 force no ISO</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM3_FORCE_ISO</name>
              <description>internal SRAM 3 force ISO</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM3_FORCE_NOISO</name>
              <description>internal SRAM 3 force no ISO</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM4_FORCE_ISO</name>
              <description>internal SRAM 4 force ISO</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INTER_RAM4_FORCE_NOISO</name>
              <description>internal SRAM 4 force no ISO</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_ISO</name>
              <description>Set this bit to force isolate the Wi-Fi circuits.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WIFI_FORCE_NOISO</name>
              <description>Set this bit to disable the force isolation to the Wi-Fi circuits.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_ISO</name>
              <description>Set this bit to force isolate the digital system.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DG_WRAP_FORCE_NOISO</name>
              <description>Set this bit to disable the force isolation to the digital system.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG0</name>
          <description>RTC watchdog configuration register</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <resetValue>0x00013214</resetValue>
          <fields>
            <field>
              <name>WDT_CHIP_RESET_WIDTH</name>
              <description>chip reset siginal pulse width</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_CHIP_RESET_EN</name>
              <description>wdt reset whole chip enable</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_PAUSE_IN_SLP</name>
              <description>Set this bit to pause the watchdog in sleep.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_APPCPU_RESET_EN</name>
              <description>enable WDT reset APP CPU</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_PROCPU_RESET_EN</name>
              <description>Set this bit to allow the watchdog to be able to reset CPU.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_FLASHBOOT_MOD_EN</name>
              <description>Set this bit to enable watchdog when the chip boots from flash.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_SYS_RESET_LENGTH</name>
              <description>Sets the length of the system reset counter.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_CPU_RESET_LENGTH</name>
              <description>Sets the length of the CPU reset counter.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG3</name>
              <description>1: enable at the interrupt stage 2: enable at the CPU stage  3: enable at the system stage 4: enable at the system and RTC stage.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG2</name>
              <description>1: enable at the interrupt stage 2: enable at the CPU stage  3: enable at the system stage 4: enable at the system and RTC stage.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG1</name>
              <description>1: enable at the interrupt stage 2: enable at the CPU stage  3: enable at the system stage 4: enable at the system and RTC stage.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_STG0</name>
              <description>1: enable at the interrupt stage 2: enable at the CPU stage  3: enable at the system stage 4: enable at the system and RTC stage.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>WDT_EN</name>
              <description>Set this bit to enable the RTC watchdog.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG1</name>
          <description>Configures the hold time of RTC watchdog at level 1</description>
          <addressOffset>0x98</addressOffset>
          <size>0x20</size>
          <resetValue>0x00030D40</resetValue>
          <fields>
            <field>
              <name>WDT_STG0_HOLD</name>
              <description>Configures the hold time of RTC watchdog at level 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG2</name>
          <description>Configures the hold time of RTC watchdog at level 2</description>
          <addressOffset>0x9C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00013880</resetValue>
          <fields>
            <field>
              <name>WDT_STG1_HOLD</name>
              <description>Configures the hold time of RTC watchdog at level 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG3</name>
          <description>Configures the hold time of RTC watchdog at level 3</description>
          <addressOffset>0xA0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>WDT_STG2_HOLD</name>
              <description>Configures the hold time of RTC watchdog at level 3.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTCONFIG4</name>
          <description>Configures the hold time of RTC watchdog at level 4</description>
          <addressOffset>0xA4</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000FFF</resetValue>
          <fields>
            <field>
              <name>WDT_STG3_HOLD</name>
              <description>Configures the hold time of RTC watchdog at level 4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTFEED</name>
          <description>RTC watchdog SW feed configuration register</description>
          <addressOffset>0xA8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_WDT_FEED</name>
              <description>Set 1 to feed the RTC watchdog.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>WDTWPROTECT</name>
          <description>RTC watchdog write protection configuration register</description>
          <addressOffset>0xAC</addressOffset>
          <size>0x20</size>
          <resetValue>0x50D83AA1</resetValue>
          <fields>
            <field>
              <name>WDT_WKEY</name>
              <description>Sets the write protection key of the watchdog.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWD_CONF</name>
          <description>Super watchdog configuration register</description>
          <addressOffset>0xB0</addressOffset>
          <size>0x20</size>
          <resetValue>0x04B00000</resetValue>
          <fields>
            <field>
              <name>SWD_RESET_FLAG</name>
              <description>Indicates the super watchdog reset flag.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_FEED_INT</name>
              <description>Receiving this interrupt leads to feeding the super watchdog via SW.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SWD_SIGNAL_WIDTH</name>
              <description>Adjusts the signal width sent to the super watchdog.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_RST_FLAG_CLR</name>
              <description>Set to reset the super watchdog reset flag.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_FEED</name>
              <description>Set to feed the super watchdog via SW.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>SWD_DISABLE</name>
              <description>Set this bit to disable super watchdog.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SWD_AUTO_FEED_EN</name>
              <description>Set this bit to enable automatic watchdog feeding upon interrupts.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SWD_WPROTECT</name>
          <description>Super watchdog write protection configuration register</description>
          <addressOffset>0xB4</addressOffset>
          <size>0x20</size>
          <resetValue>0x8F1D312A</resetValue>
          <fields>
            <field>
              <name>SWD_WKEY</name>
              <description>Sets the write protection key of the super watchdog.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SW_CPU_STALL</name>
          <description>CPU stall configuration register</description>
          <addressOffset>0xB8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SW_STALL_APPCPU_C1</name>
              <description>{reg_sw_stall_appcpu_c1[5:0]  reg_sw_stall_appcpu_c0[1:0]} == 0x86 will stall APP CPU</description>
              <bitOffset>20</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_STALL_PROCPU_C1</name>
              <description>Set this bit to allow the SW to be able to send the CPU into stalling.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE4</name>
          <description>Reservation register 4</description>
          <addressOffset>0xBC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH4</name>
              <description>Reservation register 4.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE5</name>
          <description>Reservation register 5</description>
          <addressOffset>0xC0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH5</name>
              <description>Reservation register 5.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE6</name>
          <description>Reservation register 6</description>
          <addressOffset>0xC4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH6</name>
              <description>Reservation register 6.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STORE7</name>
          <description>Reservation register 7</description>
          <addressOffset>0xC8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SCRATCH7</name>
              <description>Reservation register 7.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>LOW_POWER_ST</name>
          <description>RTC main state machine status register</description>
          <addressOffset>0xCC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XPD_ROM0</name>
              <description>rom0 power down</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_DIG_DCDC</name>
              <description>External DCDC power down</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_PERI_ISO</name>
              <description>rtc peripheral iso</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_RTC_PERI</name>
              <description>rtc peripheral power down</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>WIFI_ISO</name>
              <description>wifi iso</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_WIFI</name>
              <description>wifi wrap power down</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DIG_ISO</name>
              <description>digital wrap iso</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>XPD_DIG</name>
              <description>digital wrap power down</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_STATE_START</name>
              <description>touch should start to work</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_STATE_SWITCH</name>
              <description>touch is about to working. Switch rtc main state</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_STATE_SLP</name>
              <description>touch is in sleep state</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_TOUCH_STATE_DONE</name>
              <description>touch is done</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_STATE_START</name>
              <description>ulp/cocpu should start to work</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_STATE_SWITCH</name>
              <description>ulp/cocpu is about to working. Switch rtc main state</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_STATE_SLP</name>
              <description>ulp/cocpu is in sleep state</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_COCPU_STATE_DONE</name>
              <description>ulp/cocpu is done</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_XTAL_ISO</name>
              <description>no use any more</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_PLL_ON</name>
              <description>rtc main state machine is in states that pll should be running</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_RDY_FOR_WAKEUP</name>
              <description>Indicates the RTC is ready to be triggered by any wakeup source.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_WAIT_END</name>
              <description>rtc main state machine has been waited for some cycles</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_IN_WAKEUP_STATE</name>
              <description>rtc main state machine is in the states of wakeup process</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_IN_LOW_POWER_STATE</name>
              <description>rtc main state machine is in the states of low power</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_IN_WAIT_8M</name>
              <description>rtc main state machine is in wait 8m state</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_IN_WAIT_PLL</name>
              <description>rtc main state machine is in wait pll state</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_IN_WAIT_XTL</name>
              <description>rtc main state machine is in wait xtal state</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_IN_SLP</name>
              <description>rtc main state machine is in sleep state</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE_IN_IDLE</name>
              <description>rtc main state machine is in idle state</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RTC_MAIN_STATE</name>
              <description>rtc main state machine status</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIAG0</name>
          <description>debug register</description>
          <addressOffset>0xD0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_LOW_POWER_DIAG1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>PAD_HOLD</name>
          <description>Configures the hold options for RTC GPIOs</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD0_HOLD</name>
              <description>Sets the touch GPIO 0 to hold.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD1_HOLD</name>
              <description>Sets the touch GPIO 1 to hold.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD2_HOLD</name>
              <description>Sets the touch GPIO 2 to hold.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD3_HOLD</name>
              <description>Sets the touch GPIO 3 to hold.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD4_HOLD</name>
              <description>Sets the touch GPIO 4 to hold.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD5_HOLD</name>
              <description>Sets the touch GPIO 5 to hold.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD6_HOLD</name>
              <description>Sets the touch GPIO 6 to hold.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD7_HOLD</name>
              <description>Sets the touch GPIO 7 to hold.</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD8_HOLD</name>
              <description>Sets the touch GPIO 8 to hold.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD9_HOLD</name>
              <description>Sets the touch GPIO 9 to hold.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD10_HOLD</name>
              <description>Sets the touch GPIO 10 to hold.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD11_HOLD</name>
              <description>Sets the touch GPIO 11 to hold.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD12_HOLD</name>
              <description>Sets the touch GPIO 12 to hold.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD13_HOLD</name>
              <description>Sets the touch GPIO 13 to hold.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_PAD14_HOLD</name>
              <description>Sets the touch GPIO 14 to hold.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32P_HOLD</name>
              <description>Sets the x32p to hold.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>X32N_HOLD</name>
              <description>Sets the x32n to hold.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC1_HOLD</name>
              <description>Sets the pdac1 to hold.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PDAC2_HOLD</name>
              <description>Sets the pdac2 to hold.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_PAD19_HOLD</name>
              <description>Sets the RTG GPIO 19 to hold.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_PAD20_HOLD</name>
              <description>Sets the RTG GPIO 20 to hold.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_PAD21_HOLD</name>
              <description>Sets the RTG GPIO 21 to hold.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DIG_PAD_HOLD</name>
          <description>Configures the hold option for digital GPIOs</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>DIG_PAD_HOLD</name>
              <description>Set GPIO 21 to GPIO 45 to hold. (See bitmap to locate any GPIO).</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP1</name>
          <description>EXT1 wakeup configuration register</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SEL</name>
              <description>Selects a RTC GPIO to be the EXT1 wakeup source.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>STATUS_CLR</name>
              <description>Clears the EXT1 wakeup status.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>EXT_WAKEUP1_STATUS</name>
          <description>EXT1 wakeup source register</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>EXT_WAKEUP1_STATUS</name>
              <description>Indicates the EXT1 wakeup status.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>BROWN_OUT</name>
          <description>Brownout configuration register</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <resetValue>0x03FF2FF1</resetValue>
          <fields>
            <field>
              <name>BROWN_OUT2_ENA</name>
              <description>Enables the brown_out2 to initiate a chip reset.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>INT_WAIT</name>
              <description>Configures the waiting cycle before sending an interrupt.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLOSE_FLASH_ENA</name>
              <description>Set this bit to enable PD the flash when a brown-out happens.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>PD_RF_ENA</name>
              <description>Set this bit to enable PD the RF circuits when a brown-out happens.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_WAIT</name>
              <description>Configures the waiting cycle before the reset after a brown-out.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>10</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_ENA</name>
              <description>Enables to reset brown-out.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RST_SEL</name>
              <description>Selects the reset type when a brown-out happens. 1: chip reset  0: system reset.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CNT_CLR</name>
              <description>Clears the brown-out counter.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ENA</name>
              <description>Set this bit to enable brown-out detection.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_BROWN_OUT_DET</name>
              <description>Indicates the status of the brown-out signal.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_LOW1</name>
          <description>Stores the lower 32 bits of RTC timer 1</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_TIMER_VALUE1_LOW</name>
              <description>Stores the lower 32 bits of RTC timer 1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TIME_HIGH1</name>
          <description>Stores the higher 16 bits of RTC timer 1</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_TIMER_VALUE1_HIGH</name>
              <description>Stores the higher 16 bits of RTC timer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL32K_CLK_FACTOR</name>
          <description>Configures the divider factor for the backup clock of 32 kHz crystal oscillator</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>XTAL32K_CLK_FACTOR</name>
              <description>Configures the divider factor for the 32 kHz crystal oscillator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>XTAL32K_CONF</name>
          <description>32 kHz crystal oscillator configuration register</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <resetValue>0x0FF00000</resetValue>
          <fields>
            <field>
              <name>XTAL32K_RETURN_WAIT</name>
              <description>Defines the waiting cycles before returning to the normal 32 kHz crystal oscillator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_RESTART_WAIT</name>
              <description>Defines the maximum waiting cycle before restarting the 32 kHz crystal oscillator.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_WDT_TIMEOUT</name>
              <description>Defines the maximum waiting period for clock detection. If no clock is detected after this period, the 32 kHz crystal oscillator can be regarded as dead.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XTAL32K_STABLE_THRES</name>
              <description>Defines the maximum allowed restarting period, within which the 32 kHz crystal oscillator can be regarded as stable.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ULP_CP_TIMER</name>
          <description>Configure coprocessor timer</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ULP_CP_PC_INIT</name>
              <description>ULP coprocessor PC initial address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_GPIO_WAKEUP_ENA</name>
              <description>Enable the option of ULP coprocessor woken up by
RTC GPIO</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_GPIO_WAKEUP_CLR</name>
              <description>Disable the option of ULP coprocessor woken up by
RTC GPIO</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ULP_CP_SLP_TIMER_EN</name>
              <description>ULP coprocessor timer enable bit. 0: Disable hardware
Timer. 1: Enable hardware timer</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ULP_CP_CTRL</name>
          <description>ULP-FSM configuration register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00100200</resetValue>
          <fields>
            <field>
              <name>ULP_CP_MEM_ADDR_INIT</name>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_MEM_ADDR_SIZE</name>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_MEM_OFFSET_CLR</name>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ULP_CP_CLK_FO</name>
              <description>ULP-FSM clock force on</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_RESET</name>
              <description>ULP-FSM clock software reset</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_FORCE_START_TOP</name>
              <description>Write 1 to start ULP-FSM by software</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ULP_CP_START_TOP</name>
              <description>Write 1 to start ULP-FSM</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>COCPU_CTRL</name>
          <description>ULP-RISCV configuration register</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <resetValue>0x008A0810</resetValue>
          <fields>
            <field>
              <name>COCPU_CLK_FO</name>
              <description>ULP-RISCV clock force on</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_START_2_RESET_DIS</name>
              <description>Time from ULP-RISCV startup to pull down reset</description>
              <bitOffset>1</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_START_2_INTR_EN</name>
              <description>Time from ULP-RISCV startup to send out
RISCV_START_INT interrupt</description>
              <bitOffset>7</bitOffset>
              <bitWidth>6</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SHUT</name>
              <description>Shut down ULP-RISCV</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SHUT_2_CLK_DIS</name>
              <description>Time from shut down ULP-RISCV to disable clock</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SHUT_RESET_EN</name>
              <description>This bit is used to reset ULP-RISCV</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SEL</name>
              <description>0: select ULP-RISCV. 1: select ULP-FSM</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_DONE_FORCE</name>
              <description>0: select ULP-FSM DONE signal. 1: select ULP-RISCV DONE
signal</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_DONE</name>
              <description>DONE signal. Write 1 to this bit, ULP-RISCV will go to HALT and the
timer starts counting</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SW_INT_TRIGGER</name>
              <description>Trigger ULP-RISCV register interrupt</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_CTRL1</name>
          <description>Touch control register</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <resetValue>0x10000100</resetValue>
          <fields>
            <field>
              <name>TOUCH_SLEEP_CYCLES</name>
              <description>Set sleep cycles for touch timer.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_MEAS_NUM</name>
              <description>Configure measurement length (in 8 MHz), i.e., charge/discharge times.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_CTRL2</name>
          <description>Touch control register</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <resetValue>0x000840CC</resetValue>
          <fields>
            <field>
              <name>TOUCH_DRANGE</name>
              <description>TOUCH attenuation.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DREFL</name>
              <description>TOUCH reference voltage low. 0: 0.5 V 1: 0.6 V 2: 0.7 V 3: 0.8 V.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DREFH</name>
              <description>TOUCH reference voltage high. 0: 2.4 V 1: 2.5 V 2: 2.6 V 3: 2.7 V.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_XPD_BIAS</name>
              <description>TOUCH BIAS power switch.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_REFC</name>
              <description>Touch pad 0 reference capacitance.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DBIAS</name>
              <description>0: Use bandgap bias. 1: Use self bias.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_TIMER_EN</name>
              <description>Touch timer enable bit.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_START_FSM_EN</name>
              <description>0: TOUCH_START and TOUCH_XPD are controlled by soft- ware. 1: TOUCH_START and TOUCH_XPD are controlled by the Touch FSM.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_START_EN</name>
              <description>1: Start the Touch FSM, only valid when RTC_CNTL_TOUCH_START_FORCE = 1.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_START_FORCE</name>
              <description>0: Start the Touch FSM by timer. 1: Start Touch FSM by software.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_XPD_WAIT</name>
              <description>The waiting cycles (in 8MHz) between TOUCH_START and TOUCH_XPD.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_CYC_DIV</name>
              <description>When a touch pad is active, sleep cycle could be divided by this number.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_TIMER_FORCE_DONE</name>
              <description>Force touch timer done.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_RESET</name>
              <description>Reset TOUCH FSM via software.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_CLK_FO</name>
              <description>Touch clock force on.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_CLKGATE_EN</name>
              <description>Touch clock enable bit.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_SCAN_CTRL</name>
          <description>Configure touch scan settings</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <resetValue>0xF0000102</resetValue>
          <fields>
            <field>
              <name>TOUCH_DENOISE_RES</name>
              <description>Denoise resolution. 0: 12-bit; 1: 10-bit; 2: 8-bit; 3: 4-bit.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DENOISE_EN</name>
              <description>Touch pad 0 will be used to denoise.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_INACTIVE_CONNECTION</name>
              <description>Inactive touch pads connect to 0: HighZ, 1: GND.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SHIELD_PAD_EN</name>
              <description>Touch pad 14 will be used as shield_pad.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SCAN_PAD_MAP</name>
              <description>Pad enable map for touch scan mode.</description>
              <bitOffset>10</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_BUFDRV</name>
              <description>Touch 14 buffer driver strength.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_OUT_RING</name>
              <description>Select out one pad as guard_ring.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_SLP_THRES</name>
          <description>Configure the settings of touch sleep pad</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <resetValue>0x78000000</resetValue>
          <fields>
            <field>
              <name>TOUCH_SLP_TH</name>
              <description>Set the threshold for touch sleep pad.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_APPROACH_EN</name>
              <description>Enable the proximity mode of touch sleep pad.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_SLP_PAD</name>
              <description>Select sleep pad.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_APPROACH</name>
          <description>Configure touch approach settings</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <resetValue>0x50000000</resetValue>
          <fields>
            <field>
              <name>TOUCH_SLP_CHANNEL_CLR</name>
              <description>Clear touch sleep channel.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MEAS_TIME</name>
              <description>Set the total measurement times for the pads in
proximity mode. Range: 0 – 255.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_FILTER_CTRL</name>
          <description>Configure touch filter settings</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <resetValue>0x96AA8800</resetValue>
          <fields>
            <field>
              <name>TOUCH_SMOOTH_LVL</name>
              <description>0: Raw data. 1: IIR1/2. 2: IIR1/4. 3: IIR1/8.</description>
              <bitOffset>9</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_JITTER_STEP</name>
              <description>Touch jitter step. Range: 0 – 15.</description>
              <bitOffset>11</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_NEG_NOISE_LIMIT</name>
              <description>Negative threshold counter limit.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_NEG_NOISE_THRES</name>
              <description>Negative noise threshold.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_NOISE_THRES</name>
              <description>Active noise threshold.</description>
              <bitOffset>21</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_HYSTERESIS</name>
              <description>Touch hysteresis.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DEBOUNCE</name>
              <description>Debounce counter.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_FILTER_MODE</name>
              <description>Set filter mode. 0: IIR 1/2; 1: IIR 1/4; 2: IIR 1/8; 3: IIR 1/16; 4: IIR 1/32; 5: IIR 1/64; 6: IIR 1/128; 7: Jitter.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_FILTER_EN</name>
              <description>Enable touch filter.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>USB_CONF</name>
          <description>configure usb control register</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>USB_VREFH</name>
              <bitOffset>0</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_VREFL</name>
              <bitOffset>2</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_VREF_OVERRIDE</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_PULL_OVERRIDE</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DP_PULLUP</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DP_PULLDOWN</name>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DM_PULLUP</name>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_DM_PULLDOWN</name>
              <bitOffset>9</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PULLUP_VALUE</name>
              <bitOffset>10</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_ENABLE_OVERRIDE</name>
              <bitOffset>11</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_PAD_ENABLE</name>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TXM</name>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TXP</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TX_EN</name>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_TX_EN_OVERRIDE</name>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>USB_RESET_DISABLE</name>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IO_MUX_RESET_DISABLE</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TOUCH_TIMEOUT_CTRL</name>
          <description>Configure touch timeout settings</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <resetValue>0x007FFFFF</resetValue>
          <fields>
            <field>
              <name>TOUCH_TIMEOUT_NUM</name>
              <description>Set touch timeout threshold.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_TIMEOUT_EN</name>
              <description>Enable touch timeout.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_REJECT_CAUSE</name>
          <description>Stores the reject-to-sleep cause.</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>REJECT_CAUSE</name>
              <description>Stores the reject-to-sleep cause.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>OPTION1</name>
          <description>RTC option register</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FORCE_DOWNLOAD_BOOT</name>
              <description>Set this bit to force the chip to boot from the download mode.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLP_WAKEUP_CAUSE</name>
          <description>Stores the sleep-to-wakeup cause.</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>WAKEUP_CAUSE</name>
              <description>Stores the wakeup cause.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>17</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>ULP_CP_TIMER_1</name>
          <description>Configure sleep cycle of the timer</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <resetValue>0x0000C800</resetValue>
          <fields>
            <field>
              <name>ULP_CP_TIMER_SLP_CYCLE</name>
              <description>Set sleep cycles for ULP coprocessor timer</description>
              <bitOffset>8</bitOffset>
              <bitWidth>24</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <resetValue>0x01906191</resetValue>
          <fields>
            <field>
              <name>RTC_CNTL_DATE</name>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>RTC_I2C</name>
      <description>Low-power I2C (Inter-Integrated Circuit) Controller</description>
      <groupName>RTC_I2C</groupName>
      <baseAddress>0x0000EC00</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x7C</size>
        <usage>registers</usage>
      </addressBlock>
      <registers>
        <register>
          <name>SCL_LOW</name>
          <description>Configure the low level width of SCL</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000100</resetValue>
          <fields>
            <field>
              <name>PERIOD</name>
              <description>This register is used to configure how many clock cycles SCL
remains low.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CTRL</name>
          <description>Transmission setting</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SDA_FORCE_OUT</name>
              <description>SDA output mode. 0: open drain. 1: push pull.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SCL_FORCE_OUT</name>
              <description>SCL output mode. 0: open drain. 1: push pull.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MS_MODE</name>
              <description>Set this bit to configure RTC I²C as a master.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_START</name>
              <description>Set this bit to 1, RTC I2C starts sending data.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_LSB_FIRST</name>
              <description>This bit is used to control the sending mode. 0: send data from the most
significant bit. 1: send data from the least significant bit.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_LSB_FIRST</name>
              <description>This bit is used to control the storage mode for received data. 0: receive
data from the most significant bit. 1: receive data from the least significant bit.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_GATE_EN</name>
              <description>RTC I²C controller clock gate.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RESET</name>
              <description>RTC I²C software reset.</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>CLK_EN</name>
              <description>rtc i2c reg clk gating</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>STATUS</name>
          <description>RTC I2C status</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>ACK_REC</name>
              <description>The received ACK value. 0: ACK. 1: NACK.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_RW</name>
              <description>0: master writes to slave. 1: master reads from slave.</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARB_LOST</name>
              <description>When the RTC I2C loses control of SCL line, the register changes to 1.</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BUS_BUSY</name>
              <description>0: RTC I2C bus is in idle state. 1: RTC I2C bus is busy transferring data.</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_ADDRESSED</name>
              <description>When the address sent by the master matches the address of the
slave, then this bit will be set.</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>BYTE_TRANS</name>
              <description>This field changes to 1 when one byte is transferred.</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>OP_CNT</name>
              <description>Indicate which operation is working.</description>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SHIFT</name>
              <description>shifter content</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_MAIN_STATE_LAST</name>
              <description>i2c last main status</description>
              <bitOffset>24</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SCL_STATE_LAST</name>
              <description>scl last status</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>TO</name>
          <description>Configure RTC I2C timeout</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <resetValue>0x00010000</resetValue>
          <fields>
            <field>
              <name>TIME_OUT</name>
              <description>Timeout threshold</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SLAVE_ADDR</name>
          <description>Configure slave address</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_ADDR</name>
              <description>slave address</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ADDR_10BIT_EN</name>
              <description>This field is used to enable the slave 10-bit addressing mode.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_HIGH</name>
          <description>Configure the high level width of SCL</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000100</resetValue>
          <fields>
            <field>
              <name>PERIOD</name>
              <description>This register is used to configure how many cycles SCL remains high.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SDA_DUTY</name>
          <description>Configure the SDA hold time after a negative
SCL edge</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000010</resetValue>
          <fields>
            <field>
              <name>NUM</name>
              <description>The number of clock cycles between the SDA switch and the falling
edge of SCL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_START_PERIOD</name>
          <description>Configure the delay between the SDA and SCL
negative edge for a start condition</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>SCL_START_PERIOD</name>
              <description>Number of clock cycles to wait after generating a start condition.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SCL_STOP_PERIOD</name>
          <description>Configure the delay between SDA and SCL positive edge for a stop condition</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000008</resetValue>
          <fields>
            <field>
              <name>SCL_STOP_PERIOD</name>
              <description>Number of clock cycles to wait before generating a stop condition.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>20</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_CLR</name>
          <description>Clear RTC I2C interrupt</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_CLR</name>
              <description>RTC_I2C_SLAVE_TRAN_COMP_INT interrupt clear bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_CLR</name>
              <description>RTC_I2C_ARBITRATION_LOST_INT interrupt clear bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_CLR</name>
              <description>RTC_I2C_MASTER_TRAN_COMP_INT interrupt
clear bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_CLR</name>
              <description>RTC_I2C_TRANS_COMPLETE_INT interrupt clear bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_CLR</name>
              <description>RTC_I2C_TIME_OUT_INT interrupt clear bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>ACK_ERR_INT_CLR</name>
              <description>RTC_I2C_ACK_ERR_INT interrupt clear bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>RX_DATA_INT_CLR</name>
              <description>RTC_I2C_RX_DATA_INT interrupt clear bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TX_DATA_INT_CLR</name>
              <description>RTC_I2C_TX_DATA_INT interrupt clear bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>DETECT_START_INT_CLR</name>
              <description>RTC_I2C_DETECT_START_INT interrupt clear bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_RAW</name>
          <description>RTC I2C raw interrupt</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_RAW</name>
              <description>RTC_I2C_SLAVE_TRAN_COMP_INT interrupt raw bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_RAW</name>
              <description>RTC_I2C_ARBITRATION_LOST_INT interrupt raw bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_RAW</name>
              <description>RTC_I2C_MASTER_TRAN_COMP_INT interrupt raw bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_RAW</name>
              <description>RTC_I2C_TRANS_COMPLETE_INT interrupt raw bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_RAW</name>
              <description>RTC_I2C_TIME_OUT_INT interrupt raw bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ACK_ERR_INT_RAW</name>
              <description>RTC_I2C_ACK_ERR_INT interrupt raw bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DATA_INT_RAW</name>
              <description>RTC_I2C_RX_DATA_INT interrupt raw bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DATA_INT_RAW</name>
              <description>RTC_I2C_TX_DATA_INT interrupt raw bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DETECT_START_INT_RAW</name>
              <description>RTC_I2C_DETECT_START_INT interrupt raw bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ST</name>
          <description>RTC I2C interrupt status</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_ST</name>
              <description>RTC_I2C_SLAVE_TRAN_COMP_INT interrupt status bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ST</name>
              <description>RTC_I2C_ARBITRATION_LOST_INT interrupt status bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_ST</name>
              <description>RTC_I2C_MASTER_TRAN_COMP_INT interrupt status bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ST</name>
              <description>RTC_I2C_TRANS_COMPLETE_INT interrupt status bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ST</name>
              <description>RTC_I2C_TIME_OUT_INT interrupt status bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>ACK_ERR_INT_ST</name>
              <description>RTC_I2C_ACK_ERR_INT interrupt status bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>RX_DATA_INT_ST</name>
              <description>RTC_I2C_RX_DATA_INT interrupt status bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TX_DATA_INT_ST</name>
              <description>RTC_I2C_TX_DATA_INT interrupt status bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>DETECT_START_INT_ST</name>
              <description>RTC_I2C_DETECT_START_INT interrupt status bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>INT_ENA</name>
          <description>Enable RTC I2C interrupt</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SLAVE_TRAN_COMP_INT_ENA</name>
              <description>RTC_I2C_SLAVE_TRAN_COMP_INT interrupt enable bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ARBITRATION_LOST_INT_ENA</name>
              <description>RTC_I2C_ARBITRATION_LOST_INT interrupt enable bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MASTER_TRAN_COMP_INT_ENA</name>
              <description>RTC_I2C_MASTER_TRAN_COMP_INT interrupt enable bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TRANS_COMPLETE_INT_ENA</name>
              <description>RTC_I2C_TRANS_COMPLETE_INT interrupt enable bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TIME_OUT_INT_ENA</name>
              <description>RTC_I2C_TIME_OUT_INT interrupt enable bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>ACK_ERR_INT_ENA</name>
              <description>RTC_I2C_ACK_ERR_INT interrupt enable bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RX_DATA_INT_ENA</name>
              <description>RTC_I2C_RX_DATA_INT interrupt enable bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TX_DATA_INT_ENA</name>
              <description>RTC_I2C_TX_DATA_INT interrupt enable bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DETECT_START_INT_ENA</name>
              <description>RTC_I2C_DETECT_START_INT interrupt enable bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATA</name>
          <description>RTC I2C read data</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RDATA</name>
              <description>Data received</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SLAVE_TX_DATA</name>
              <description>The data sent by slave</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DONE</name>
              <description>RTC I2C transmission is done.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD0</name>
          <description>RTC I2C Command 0</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000903</resetValue>
          <fields>
            <field>
              <name>COMMAND0</name>
              <description>Content of command 0. For more information, please refer to the register
I2C_COMD0_REG in Chapter I²C Controller</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND0_DONE</name>
              <description>When command 0 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD1</name>
          <description>RTC I2C Command 1</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND1</name>
              <description>Content of command 1. For more information, please refer to the register
I2C_COMD1_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND1_DONE</name>
              <description>When command 1 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD2</name>
          <description>RTC I2C Command 2</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000902</resetValue>
          <fields>
            <field>
              <name>COMMAND2</name>
              <description>Content of command 2. For more information, please refer to the register
I2C_COMD2_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND2_DONE</name>
              <description>When command 2 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD3</name>
          <description>RTC I2C Command 3</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000101</resetValue>
          <fields>
            <field>
              <name>COMMAND3</name>
              <description>Content of command 3. For more information, please refer to the register
I2C_COMD3_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND3_DONE</name>
              <description>When command 3 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD4</name>
          <description>RTC I2C Command 4</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000901</resetValue>
          <fields>
            <field>
              <name>COMMAND4</name>
              <description>Content of command 4. For more information, please refer to the register
I2C_COMD4_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND4_DONE</name>
              <description>When command 4 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD5</name>
          <description>RTC I2C Command 5</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001701</resetValue>
          <fields>
            <field>
              <name>COMMAND5</name>
              <description>Content of command 5. For more information, please refer to the register
I2C_COMD5_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND5_DONE</name>
              <description>When command 5 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD6</name>
          <description>RTC I2C Command 6</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND6</name>
              <description>Content of command 6. For more information, please refer to the register
I2C_COMD6_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND6_DONE</name>
              <description>When command 6 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD7</name>
          <description>RTC I2C Command 7</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000904</resetValue>
          <fields>
            <field>
              <name>COMMAND7</name>
              <description>Content of command 7. For more information, please refer to the register
I2C_COMD7_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND7_DONE</name>
              <description>When command 7 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD8</name>
          <description>RTC I2C Command 8</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND8</name>
              <description>Content of command 8. For more information, please refer to the register
I2C_COMD8_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND8_DONE</name>
              <description>When command 8 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD9</name>
          <description>RTC I2C Command 9</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000903</resetValue>
          <fields>
            <field>
              <name>COMMAND9</name>
              <description>Content of command 9. For more information, please refer to the register
I2C_COMD9_REG in Chapter I²C Controller</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND9_DONE</name>
              <description>When command 9 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD10</name>
          <description>RTC I2C Command 10</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000101</resetValue>
          <fields>
            <field>
              <name>COMMAND10</name>
              <description>Content of command 10. For more information, please refer to the register
I2C_COMD10_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND10_DONE</name>
              <description>When command 10 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD11</name>
          <description>RTC I2C Command 11</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <resetValue>0x00000901</resetValue>
          <fields>
            <field>
              <name>COMMAND11</name>
              <description>Content of command 11. For more information, please refer to the register
I2C_COMD11_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND11_DONE</name>
              <description>When command 11 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD12</name>
          <description>RTC I2C Command 12</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001701</resetValue>
          <fields>
            <field>
              <name>COMMAND12</name>
              <description>Content of command 12. For more information, please refer to the register
I2C_COMD12_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND12_DONE</name>
              <description>When command 12 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD13</name>
          <description>RTC I2C Command 13</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <resetValue>0x00001901</resetValue>
          <fields>
            <field>
              <name>COMMAND13</name>
              <description>Content of command 13. For more information, please refer to the register
I2C_COMD13_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND13_DONE</name>
              <description>When command 13 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD14</name>
          <description>RTC I2C Command 14</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMMAND14</name>
              <description>Content of command 14. For more information, please refer to the register
I2C_COMD14_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND14_DONE</name>
              <description>When command 14 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>CMD15</name>
          <description>RTC I2C Command 15</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COMMAND15</name>
              <description>Content of command 15. For more information, please refer to the register
I2C_COMD15_REG in Chapter I²C Controller.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>14</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COMMAND15_DONE</name>
              <description>When command 15 is done, this bit changes to 1.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>DATE</name>
          <description>Version control register</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <resetValue>0x01905310</resetValue>
          <fields>
            <field>
              <name>DATE</name>
              <description>Version control register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
    <peripheral>
      <name>SENS</name>
      <description>SENS Peripheral</description>
      <groupName>SENS</groupName>
      <baseAddress>0x0000C800</baseAddress>
      <addressBlock>
        <offset>0x0</offset>
        <size>0x110</size>
        <usage>registers</usage>
      </addressBlock>
      <interrupt>
        <name>TOUCH_DONE_INT</name>
        <value>0</value>
      </interrupt>
      <interrupt>
        <name>TOUCH_INACTIVE_INT</name>
        <value>1</value>
      </interrupt>
      <interrupt>
        <name>TOUCH_ACTIVE_INT</name>
        <value>2</value>
      </interrupt>
      <interrupt>
        <name>SARADC1_DONE_INT</name>
        <value>3</value>
      </interrupt>
      <interrupt>
        <name>SARADC2_DONE_INT</name>
        <value>4</value>
      </interrupt>
      <interrupt>
        <name>TSENS_DONE_INT</name>
        <value>5</value>
      </interrupt>
      <registers>
        <register>
          <name>SAR_READER1_CTRL</name>
          <description>RTC ADC1 data and sampling control</description>
          <addressOffset>0x0</addressOffset>
          <size>0x20</size>
          <resetValue>0x20040002</resetValue>
          <fields>
            <field>
              <name>SAR1_CLK_DIV</name>
              <description>Clock divider.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_CLK_GATED</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_SAMPLE_NUM</name>
              <bitOffset>19</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_DATA_INV</name>
              <description>Invert SAR ADC1 data.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_INT_EN</name>
              <description>Enable SAR ADC1 to send out interrupt.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_READER1_STATUS</name>
          <description>saradc1 status for debug</description>
          <addressOffset>0x4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR1_READER_STATUS</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS1_CTRL1</name>
          <description>Configure RTC ADC1 controller</description>
          <addressOffset>0x8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>RTC_SARADC_RESET</name>
              <description>SAR ADC software reset.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>RTC_SARADC_CLKGATE_EN</name>
              <description>Enable bit of SAR ADC clock gate.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>FORCE_XPD_AMP</name>
              <bitOffset>24</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_RST_FB_FORCE</name>
              <bitOffset>26</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_SHORT_REF_FORCE</name>
              <bitOffset>28</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_SHORT_REF_GND_FORCE</name>
              <bitOffset>30</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS1_CTRL2</name>
          <description>Control RTC ADC1 conversion and status</description>
          <addressOffset>0xC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEAS1_DATA_SAR</name>
              <description>SAR ADC1 data</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEAS1_DONE_SAR</name>
              <description>Indicate SAR ADC1 conversion is done.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEAS1_START_SAR</name>
              <description>SAR ADC1 controller (in RTC) starts conversion, active only when SENS_MEAS1_START_FORCE = 1.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEAS1_START_FORCE</name>
              <description>1: SAR ADC1 controller (in RTC) is started by software. 0: SAR ADC1 controller is started by ULP coprocessor.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_EN_PAD</name>
              <description>SAR ADC1 pad enable bitmap, active only when SENS_SAR1_EN_PAD_FORCE = 1.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR1_EN_PAD_FORCE</name>
              <description>1: SAR ADC1 pad enable bitmap is controlled by software. 0: SAR ADC1 pad enable bitmap is controlled by ULP coprocessor.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS1_MUX</name>
          <description>Select the controller for SAR ADC1</description>
          <addressOffset>0x10</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR1_DIG_FORCE</name>
              <description>1: SAR ADC1 controlled by DIG ADC1 CTRL</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_ATTEN1</name>
          <description>Configure SAR ADC1 attenuation</description>
          <addressOffset>0x14</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>SAR1_ATTEN</name>
              <description>2-bit attenuation for each pad. [1:0] is used for channel 0, [3:2] is used for channel 1, etc.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_AMP_CTRL1</name>
          <description>AMP control</description>
          <addressOffset>0x18</addressOffset>
          <size>0x20</size>
          <resetValue>0x000A000A</resetValue>
          <fields>
            <field>
              <name>SAR_AMP_WAIT1</name>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_WAIT2</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_AMP_CTRL2</name>
          <description>AMP control</description>
          <addressOffset>0x1C</addressOffset>
          <size>0x20</size>
          <resetValue>0x000A0000</resetValue>
          <fields>
            <field>
              <name>SAR1_DAC_XPD_FSM_IDLE</name>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SAR_AMP_FSM_IDLE</name>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_RST_FB_FSM_IDLE</name>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_SHORT_REF_FSM_IDLE</name>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_SHORT_REF_GND_FSM_IDLE</name>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SAR_FSM_IDLE</name>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_RSTB_FSM_IDLE</name>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_AMP_WAIT3</name>
              <bitOffset>16</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_AMP_CTRL3</name>
          <description>AMP control register</description>
          <addressOffset>0x20</addressOffset>
          <size>0x20</size>
          <resetValue>0x007338F3</resetValue>
          <fields>
            <field>
              <name>SAR1_DAC_XPD_FSM</name>
              <description>Control of DAC. 4’b0010: disable DAC. 4’b0000: power up DAC by FSM. 4’b0011: power up DAC by software.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SAR_AMP_FSM</name>
              <bitOffset>4</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_RST_FB_FSM</name>
              <bitOffset>8</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_SHORT_REF_FSM</name>
              <bitOffset>12</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>AMP_SHORT_REF_GND_FSM</name>
              <bitOffset>16</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_SAR_FSM</name>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_RSTB_FSM</name>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_READER2_CTRL</name>
          <description>RTC ADC2 data and sampling control</description>
          <addressOffset>0x24</addressOffset>
          <size>0x20</size>
          <resetValue>0x40050002</resetValue>
          <fields>
            <field>
              <name>SAR2_CLK_DIV</name>
              <description>clock divider</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_WAIT_ARB_CYCLE</name>
              <description>wait arbit stable after sar_done</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_CLK_GATED</name>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_SAMPLE_NUM</name>
              <bitOffset>19</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_DATA_INV</name>
              <description>Invert SAR ADC2 data</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_INT_EN</name>
              <description>enable saradc2 to send out interrupt</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_READER2_STATUS</name>
          <description>saradc2 status for debug</description>
          <addressOffset>0x28</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR2_READER_STATUS</name>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS2_CTRL1</name>
          <description>configure rtc saradc2</description>
          <addressOffset>0x2C</addressOffset>
          <size>0x20</size>
          <resetValue>0x07020200</resetValue>
          <fields>
            <field>
              <name>SAR2_CNTL_STATE</name>
              <description>saradc2_cntl_fsm</description>
              <bitOffset>0</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>SAR2_PWDET_CAL_EN</name>
              <description>rtc control pwdet enable</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_PKDET_CAL_EN</name>
              <description>rtc control pkdet enable</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_EN_TEST</name>
              <description>SAR2_EN_TEST</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_RSTB_FORCE</name>
              <bitOffset>6</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_STANDBY_WAIT</name>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_RSTB_WAIT</name>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_XPD_WAIT</name>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS2_CTRL2</name>
          <description>Control RTC ADC2 conversion and status</description>
          <addressOffset>0x30</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>MEAS2_DATA_SAR</name>
              <description>SAR ADC2 data.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEAS2_DONE_SAR</name>
              <description>Indicate SAR ADC2 conversion is done.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>MEAS2_START_SAR</name>
              <description>SAR ADC2 controller (in RTC) starts conversion, active only when SENS_MEAS2_START_FORCE = 1.</description>
              <bitOffset>17</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEAS2_START_FORCE</name>
              <description>1: SAR ADC2 controller (in RTC) is started by software. 0: SAR ADC2 controller is started by ULP coprocessor.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_EN_PAD</name>
              <description>SAR ADC2 pad enable bitmap, active only whenSENS_SAR2_EN_PAD_FORCE = 1.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_EN_PAD_FORCE</name>
              <description>1: SAR ADC2 pad enable bitmap is controlled by software. 0: SAR ADC2 pad enable bitmap is controlled by ULP coprocessor.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_MEAS2_MUX</name>
          <description>Select the controller for SAR ADC2</description>
          <addressOffset>0x34</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR2_PWDET_CCT</name>
              <description>SAR2_PWDET_CCT, PA power detector capacitance tuning.</description>
              <bitOffset>28</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR2_RTC_FORCE</name>
              <description>In sleep, force to use RTC to control ADC.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_ATTEN2</name>
          <description>Configure SAR ADC2 attenuation</description>
          <addressOffset>0x38</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFFFFFFF</resetValue>
          <fields>
            <field>
              <name>SAR2_ATTEN</name>
              <description>2-bit attenuation for each pad. [1:0] is used for channel 0, [3:2] is used for channel 1, etc.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_POWER_XPD_SAR</name>
          <description>configure saradc’s power by sw</description>
          <addressOffset>0x3C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>FORCE_XPD_SAR</name>
              <bitOffset>29</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SARCLK_EN</name>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR1</name>
          <description>Configure slave addresses 0-1 of RTC I2C</description>
          <addressOffset>0x40</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2C_SLAVE_ADDR1</name>
              <description>RTC I2C slave address 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_SLAVE_ADDR0</name>
              <description>RTC I2C slave address 0</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>MEAS_STATUS</name>
              <bitOffset>22</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR2</name>
          <description>Configure slave addresses 2-3 of RTC I2C</description>
          <addressOffset>0x44</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2C_SLAVE_ADDR3</name>
              <description>RTC I2C slave address 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_SLAVE_ADDR2</name>
              <description>RTC I2C slave address 2</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR3</name>
          <description>Configure slave addresses 4-5 of RTC I2C</description>
          <addressOffset>0x48</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2C_SLAVE_ADDR5</name>
              <description>RTC I2C slave address 5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_SLAVE_ADDR4</name>
              <description>RTC I2C slave address 4</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_SLAVE_ADDR4</name>
          <description>Configure slave addresses 6-7 of RTC I2C</description>
          <addressOffset>0x4C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>I2C_SLAVE_ADDR7</name>
              <description>RTC I2C slave address 7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>I2C_SLAVE_ADDR6</name>
              <description>RTC I2C slave address 6</description>
              <bitOffset>11</bitOffset>
              <bitWidth>11</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TSENS_CTRL</name>
          <description>Temperature sensor data control</description>
          <addressOffset>0x50</addressOffset>
          <size>0x20</size>
          <resetValue>0x00019000</resetValue>
          <fields>
            <field>
              <name>TSENS_OUT</name>
              <description>Temperature sensor data out.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSENS_READY</name>
              <description>Indicate temperature sensor out ready.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TSENS_INT_EN</name>
              <description>Enable temperature sensor to send out interrupt.</description>
              <bitOffset>12</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_IN_INV</name>
              <description>Invert temperature sensor data.</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_CLK_DIV</name>
              <description>Temperature sensor clock divider.</description>
              <bitOffset>14</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_POWER_UP</name>
              <description>Temperature sensor power up.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_POWER_UP_FORCE</name>
              <description>1: dump out and power up controlled by software. 0: by FSM.</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_DUMP_OUT</name>
              <description>Temperature sensor dump out only active when SENS_TSENS_POWER_UP_FORCE = 1.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TSENS_CTRL2</name>
          <description>Temperature sensor control</description>
          <addressOffset>0x54</addressOffset>
          <size>0x20</size>
          <resetValue>0x00004002</resetValue>
          <fields>
            <field>
              <name>TSENS_XPD_WAIT</name>
              <bitOffset>0</bitOffset>
              <bitWidth>12</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_XPD_FORCE</name>
              <bitOffset>12</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_CLK_INV</name>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_CLKGATE_EN</name>
              <description>Enable temperature sensor clock.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TSENS_RESET</name>
              <description>Reset temperature sensor.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_I2C_CTRL</name>
          <description>Configure RTC I2C transmission</description>
          <addressOffset>0x58</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_I2C_CTRL</name>
              <description>RTC I2C control data. Active only when SENS_SAR_I2C_START_FORCE =
1.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_START</name>
              <description>Start RTC I2C. Active only when SENS_SAR_I2C_START_FORCE = 1</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SAR_I2C_START_FORCE</name>
              <description>0: RTC I2C started by FSM. 1: RTC I2C started by software.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_CONF</name>
          <description>Touch sensor configuration register</description>
          <addressOffset>0x5C</addressOffset>
          <size>0x20</size>
          <resetValue>0xFFF07FFF</resetValue>
          <fields>
            <field>
              <name>TOUCH_OUTEN</name>
              <description>Enable touch controller output.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_STATUS_CLR</name>
              <description>Clear all touch active status.</description>
              <bitOffset>15</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_DATA_SEL</name>
              <description>0 and 1: touch_raw_data; 2: base_line; 3: touch_smooth_data.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_DENOISE_END</name>
              <description>Touch denoise done.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_UNIT_END</name>
              <description>Indicate the completion of sampling.</description>
              <bitOffset>19</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_PAD2</name>
              <description>Indicate which pad is selected as proximity pad2</description>
              <bitOffset>20</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_PAD1</name>
              <description>Indicate which pad is selected as proximity pad1</description>
              <bitOffset>24</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_PAD0</name>
              <description>Indicate which pad is selected as proximity pad0</description>
              <bitOffset>28</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES1</name>
          <description>Finger threshold for touch pad 1</description>
          <addressOffset>0x60</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH1</name>
              <description>Finger threshold for touch pad 1</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES2</name>
          <description>Finger threshold for touch pad 2</description>
          <addressOffset>0x64</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH2</name>
              <description>Finger threshold for touch pad 2</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES3</name>
          <description>Finger threshold for touch pad 3</description>
          <addressOffset>0x68</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH3</name>
              <description>Finger threshold for touch pad 3</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES4</name>
          <description>Finger threshold for touch pad 4</description>
          <addressOffset>0x6C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH4</name>
              <description>Finger threshold for touch pad 4</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES5</name>
          <description>Finger threshold for touch pad 5</description>
          <addressOffset>0x70</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH5</name>
              <description>Finger threshold for touch pad 5</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES6</name>
          <description>Finger threshold for touch pad 6</description>
          <addressOffset>0x74</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH6</name>
              <description>Finger threshold for touch pad 6</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES7</name>
          <description>Finger threshold for touch pad 7</description>
          <addressOffset>0x78</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH7</name>
              <description>Finger threshold for touch pad 7</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES8</name>
          <description>Finger threshold for touch pad 8</description>
          <addressOffset>0x7C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH8</name>
              <description>Finger threshold for touch pad 8</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES9</name>
          <description>Finger threshold for touch pad 9</description>
          <addressOffset>0x80</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH9</name>
              <description>Finger threshold for touch pad 9</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES10</name>
          <description>Finger threshold for touch pad 10</description>
          <addressOffset>0x84</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH10</name>
              <description>Finger threshold for touch pad 10</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES11</name>
          <description>Finger threshold for touch pad 11</description>
          <addressOffset>0x88</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH11</name>
              <description>Finger threshold for touch pad 11</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES12</name>
          <description>Finger threshold for touch pad 12</description>
          <addressOffset>0x8C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH12</name>
              <description>Finger threshold for touch pad 12</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES13</name>
          <description>Finger threshold for touch pad 13</description>
          <addressOffset>0x90</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH13</name>
              <description>Finger threshold for touch pad 13</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_THRES14</name>
          <description>Finger threshold for touch pad 14</description>
          <addressOffset>0x94</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_OUT_TH14</name>
              <description>Finger threshold for touch pad 14</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_CHN_ST</name>
          <description>Touch channel status register</description>
          <addressOffset>0xD4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD_ACTIVE</name>
              <description>Touch active status</description>
              <bitOffset>0</bitOffset>
              <bitWidth>15</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_CHANNEL_CLR</name>
              <description>Clear touch channel</description>
              <bitOffset>15</bitOffset>
              <bitWidth>15</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>TOUCH_MEAS_DONE</name>
              <description>Signal flag that indicates one touch pad is done.</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS0</name>
          <description>Status of touch controller</description>
          <addressOffset>0xD8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_DENOISE_DATA</name>
              <description>Denoise measure value from touch sensor 0.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_SCAN_CURR</name>
              <description>Current pad in scan status</description>
              <bitOffset>22</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS1</name>
          <description>Touch pad 1 status</description>
          <addressOffset>0xDC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD1_DATA</name>
              <description>The data of touch pad 1, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD1_DEBOUNCE</name>
              <description>Touch pad 1 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS2</name>
          <description>Touch pad 2 status</description>
          <addressOffset>0xE0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD2_DATA</name>
              <description>The data of touch pad 2, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD2_DEBOUNCE</name>
              <description>Touch pad 2 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS3</name>
          <description>Touch pad 3 status</description>
          <addressOffset>0xE4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD3_DATA</name>
              <description>The data of touch pad 3, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD3_DEBOUNCE</name>
              <description>Touch pad 3 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS4</name>
          <description>Touch pad 4 status</description>
          <addressOffset>0xE8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD4_DATA</name>
              <description>The data of touch pad 4, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD4_DEBOUNCE</name>
              <description>Touch pad 4 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS5</name>
          <description>Touch pad 5 status</description>
          <addressOffset>0xEC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD5_DATA</name>
              <description>The data of touch pad 5, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD5_DEBOUNCE</name>
              <description>Touch pad 5 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS6</name>
          <description>Touch pad 6 status</description>
          <addressOffset>0xF0</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD6_DATA</name>
              <description>The data of touch pad 6, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD6_DEBOUNCE</name>
              <description>Touch pad 6 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS7</name>
          <description>Touch pad 7 status</description>
          <addressOffset>0xF4</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD7_DATA</name>
              <description>The data of touch pad 7, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD7_DEBOUNCE</name>
              <description>Touch pad 7 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS8</name>
          <description>Touch pad 8 status</description>
          <addressOffset>0xF8</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD8_DATA</name>
              <description>The data of touch pad 8, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD8_DEBOUNCE</name>
              <description>Touch pad 8 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS9</name>
          <description>Touch pad 9 status</description>
          <addressOffset>0xFC</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD9_DATA</name>
              <description>The data of touch pad 9, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD9_DEBOUNCE</name>
              <description>Touch pad 9 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS10</name>
          <description>Touch pad 10 status</description>
          <addressOffset>0x100</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD10_DATA</name>
              <description>The data of touch pad 10, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD10_DEBOUNCE</name>
              <description>Touch pad 10 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS11</name>
          <description>Touch pad 11 status</description>
          <addressOffset>0x104</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD11_DATA</name>
              <description>The data of touch pad 11, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD11_DEBOUNCE</name>
              <description>Touch pad 11 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS12</name>
          <description>Touch pad 12 status</description>
          <addressOffset>0x108</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD12_DATA</name>
              <description>The data of touch pad 12, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD12_DEBOUNCE</name>
              <description>Touch pad 12 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS13</name>
          <description>Touch pad 13 status</description>
          <addressOffset>0x10C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD13_DATA</name>
              <description>The data of touch pad 13, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD13_DEBOUNCE</name>
              <description>Touch pad 13 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS14</name>
          <description>Touch pad 14 status</description>
          <addressOffset>0x110</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_PAD14_DATA</name>
              <description>The data of touch pad 14, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_PAD14_DEBOUNCE</name>
              <description>Touch pad 14 debounce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS15</name>
          <description>Touch sleep pad status</description>
          <addressOffset>0x114</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_SLP_DATA</name>
              <description>The data of touch sleep pad, depending on the setting of SENS_TOUCH_DATA_SEL.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>22</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_SLP_DEBOUNCE</name>
              <description>Touch sleep pad debouce value.</description>
              <bitOffset>29</bitOffset>
              <bitWidth>3</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_TOUCH_STATUS16</name>
          <description>Touch approach count status</description>
          <addressOffset>0x118</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>TOUCH_APPROACH_PAD2_CNT</name>
              <description>Count status of proximity pad 2.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_PAD1_CNT</name>
              <description>Count status of proximity pad 1.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_APPROACH_PAD0_CNT</name>
              <description>Count status of proximity pad 0.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>TOUCH_SLP_APPROACH_CNT</name>
              <description>Count status of sleep pad in proximity mode.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_DAC_CTRL1</name>
          <description>DAC control</description>
          <addressOffset>0x11C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SW_FSTEP</name>
              <description>Frequency step for CW generator can be used to adjust the frequency.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>16</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>SW_TONE_EN</name>
              <description>0: disable CW generator. 1: enable CW generator.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DEBUG_BIT_SEL</name>
              <bitOffset>17</bitOffset>
              <bitWidth>5</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_DIG_FORCE</name>
              <description>0: DAC1 and DAC2 do not use DMA. 1: DAC1 and DAC2 use DMA.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CLK_FORCE_LOW</name>
              <description>1: force PDAC_CLK to low</description>
              <bitOffset>23</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CLK_FORCE_HIGH</name>
              <description>1: force PDAC_CLK to high</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CLK_INV</name>
              <description>1: invert PDAC_CLK.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_RESET</name>
              <description>Reset DAC by software.</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CLKGATE_EN</name>
              <description>DAC clock gate enable bit.</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_DAC_CTRL2</name>
          <description>DAC output control</description>
          <addressOffset>0x120</addressOffset>
          <size>0x20</size>
          <resetValue>0x03000000</resetValue>
          <fields>
            <field>
              <name>DAC_DC1</name>
              <description>DC offset for DAC1 CW generator.</description>
              <bitOffset>0</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_DC2</name>
              <description>DC offset for DAC2 CW generator.</description>
              <bitOffset>8</bitOffset>
              <bitWidth>8</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_SCALE1</name>
              <description>DAC1 scaling. 00: no scale. 01: scale to 1/2. 10: scale to 1/4. 11: scale to 1/8.</description>
              <bitOffset>16</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_SCALE2</name>
              <description>DAC2 scaling. 00: no scale. 01: scale to 1/2. 10: scale to 1/4. 11: scale to 1/8.</description>
              <bitOffset>18</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_INV1</name>
              <description>Invert DAC1. 00: do not invert any bits. 01: invert all bits. 10: invert MSB. 11: invert all bits except MSB.</description>
              <bitOffset>20</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_INV2</name>
              <description>Invert DAC2. 00: do not invert any bits. 01: invert all bits. 10: invert MSB. 11: invert all bits except MSB.</description>
              <bitOffset>22</bitOffset>
              <bitWidth>2</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CW_EN1</name>
              <description>1: select CW generator as source for PDAC1_DAC. 0: select register RT- CIO_PDAC1_DAC as source for PDAC1_DAC.</description>
              <bitOffset>24</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>DAC_CW_EN2</name>
              <description>1: select CW generator as source for PDAC2_DAC. 0: select register RT- CIO_PDAC2_DAC as source for PDAC2_DAC.</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_STATE</name>
          <description>ULP-RISCV status</description>
          <addressOffset>0x124</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COCPU_DBG_TRIGGER</name>
              <description>Trigger ULP-RISCV debug registers</description>
              <bitOffset>25</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_CLK_EN</name>
              <description>Check ULP-RISCV whether clk on</description>
              <bitOffset>26</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_RESET_N</name>
              <description>Check ULP-RISCV whether in reset state</description>
              <bitOffset>27</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_EOI</name>
              <description>Check ULP-RISCV whether in interrupt state</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TRAP</name>
              <description>Check ULP-RISCV whether in trap state</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_EBREAK</name>
              <description>Check ULP-RISCV whether in ebreak</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_RAW</name>
          <description>Interrupt raw bit of ULP-RISCV</description>
          <addressOffset>0x128</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COCPU_TOUCH_DONE_INT_RAW</name>
              <description>TOUCH_DONE_INT interrupt raw bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TOUCH_INACTIVE_INT_RAW</name>
              <description>TOUCH_INACTIVE_INT interrupt raw bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TOUCH_ACTIVE_INT_RAW</name>
              <description>TOUCH_ACTIVE_INT interrupt raw bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SARADC1_INT_RAW</name>
              <description>SARADC1_DONE_INT interrupt raw bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SARADC2_INT_RAW</name>
              <description>SARADC2_DONE_INT interrupt raw bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TSENS_INT_RAW</name>
              <description>TSENS_DONE_INT interrupt raw bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_START_INT_RAW</name>
              <description>RISCV_START_INT interrupt raw bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SW_INT_RAW</name>
              <description>SW_INT interrupt raw bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SWD_INT_RAW</name>
              <description>SWD_INT interrupt raw bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_ENA</name>
          <description>Interrupt enable bit of ULP-RISCV</description>
          <addressOffset>0x12C</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COCPU_TOUCH_DONE_INT_ENA</name>
              <description>TOUCH_DONE_INT interrupt enable bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_TOUCH_INACTIVE_INT_ENA</name>
              <description>TOUCH_INACTIVE_INT interrupt enable bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_TOUCH_ACTIVE_INT_ENA</name>
              <description>TOUCH_ACTIVE_INT interrupt enable bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SARADC1_INT_ENA</name>
              <description>SARADC1_DONE_INT interrupt enable bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SARADC2_INT_ENA</name>
              <description>SARADC2_DONE_INT interrupt enable bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_TSENS_INT_ENA</name>
              <description>TSENS_DONE_INT interrupt enable bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_START_INT_ENA</name>
              <description>RISCV_START_INT interrupt enable bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SW_INT_ENA</name>
              <description>SW_INT interrupt enable bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>COCPU_SWD_INT_ENA</name>
              <description>SWD_INT interrupt enable bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_ST</name>
          <description>Interrupt status bit of ULP-RISCV</description>
          <addressOffset>0x130</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COCPU_TOUCH_DONE_INT_ST</name>
              <description>TOUCH_DONE_INT interrupt status bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TOUCH_INACTIVE_INT_ST</name>
              <description>TOUCH_INACTIVE_INT interrupt status bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TOUCH_ACTIVE_INT_ST</name>
              <description>TOUCH_ACTIVE_INT interrupt status bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SARADC1_INT_ST</name>
              <description>SARADC1_DONE_INT interrupt status bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SARADC2_INT_ST</name>
              <description>SARADC2_DONE_INT interrupt status bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_TSENS_INT_ST</name>
              <description>TSENS_DONE_INT interrupt status bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_START_INT_ST</name>
              <description>RISCV_START_INT interrupt status bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SW_INT_ST</name>
              <description>SW_INT interrupt status bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_SWD_INT_ST</name>
              <description>SWD_INT interrupt status bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_INT_CLR</name>
          <description>Interrupt clear bit of ULP-RISCV</description>
          <addressOffset>0x134</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COCPU_TOUCH_DONE_INT_CLR</name>
              <description>TOUCH_DONE_INT interrupt clear bit</description>
              <bitOffset>0</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_TOUCH_INACTIVE_INT_CLR</name>
              <description>TOUCH_INACTIVE_INT interrupt clear bit</description>
              <bitOffset>1</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_TOUCH_ACTIVE_INT_CLR</name>
              <description>TOUCH_ACTIVE_INT interrupt clear bit</description>
              <bitOffset>2</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_SARADC1_INT_CLR</name>
              <description>SARADC1_DONE_INT interrupt clear bit</description>
              <bitOffset>3</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_SARADC2_INT_CLR</name>
              <description>SARADC2_DONE_INT interrupt clear bit</description>
              <bitOffset>4</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_TSENS_INT_CLR</name>
              <description>TSENS_DONE_INT interrupt clear bit</description>
              <bitOffset>5</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_START_INT_CLR</name>
              <description>RISCV_START_INT interrupt clear bit</description>
              <bitOffset>6</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_SW_INT_CLR</name>
              <description>SW_INT interrupt clear bit</description>
              <bitOffset>7</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
            <field>
              <name>COCPU_SWD_INT_CLR</name>
              <description>SWD_INT interrupt clear bit</description>
              <bitOffset>8</bitOffset>
              <bitWidth>1</bitWidth>
              <access>write-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_COCPU_DEBUG</name>
          <description>ULP-RISCV debug register</description>
          <addressOffset>0x138</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>COCPU_PC</name>
              <description>ULP-RISCV Program counter</description>
              <bitOffset>0</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_MEM_VLD</name>
              <description>ULP-RISCV memory valid output</description>
              <bitOffset>13</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_MEM_RDY</name>
              <description>ULP-RISCV memory ready input</description>
              <bitOffset>14</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_MEM_WEN</name>
              <description>ULP-RISCV memory write enable output</description>
              <bitOffset>15</bitOffset>
              <bitWidth>4</bitWidth>
              <access>read-only</access>
            </field>
            <field>
              <name>COCPU_MEM_ADDR</name>
              <description>ULP-RISCV memory address output</description>
              <bitOffset>19</bitOffset>
              <bitWidth>13</bitWidth>
              <access>read-only</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_HALL_CTRL</name>
          <description>hall control</description>
          <addressOffset>0x13C</addressOffset>
          <size>0x20</size>
          <resetValue>0xA0000000</resetValue>
          <fields>
            <field>
              <name>XPD_HALL</name>
              <description>Power on hall sensor and connect to VP and VN</description>
              <bitOffset>28</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>XPD_HALL_FORCE</name>
              <description>1: XPD HALL is controlled by SW. 0: XPD HALL is controlled by FSM in ULP-coprocessor</description>
              <bitOffset>29</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HALL_PHASE</name>
              <description>Reverse phase of hall sensor</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>HALL_PHASE_FORCE</name>
              <description>1: HALL PHASE is controlled by SW  0: HALL PHASE is controlled by FSM in ULP-coprocessor</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_NOUSE</name>
          <description>sar nouse</description>
          <addressOffset>0x140</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>SAR_NOUSE</name>
              <description>sar nouse</description>
              <bitOffset>0</bitOffset>
              <bitWidth>32</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SAR_IO_MUX_CONF</name>
          <description>Configure and reset IO MUX</description>
          <addressOffset>0x144</addressOffset>
          <size>0x20</size>
          <fields>
            <field>
              <name>IOMUX_RESET</name>
              <description>Reset IO MUX by software</description>
              <bitOffset>30</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
            <field>
              <name>IOMUX_CLK_GATE_EN</name>
              <description>IO MUX clock gate enable bit</description>
              <bitOffset>31</bitOffset>
              <bitWidth>1</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
        <register>
          <name>SARDATE</name>
          <description>Version Control Register</description>
          <addressOffset>0x148</addressOffset>
          <size>0x20</size>
          <resetValue>0x01906140</resetValue>
          <fields>
            <field>
              <name>SAR_DATE</name>
              <description>Version Control Register</description>
              <bitOffset>0</bitOffset>
              <bitWidth>28</bitWidth>
              <access>read-write</access>
            </field>
          </fields>
        </register>
      </registers>
    </peripheral>
  </peripherals>
</device>